/**/
/**/
/**** This file is auto generated by IDesignSpec (http://www.agnisys.com) . Please do not edit this file. ****/
/* created on        : 2020-11-14T00:49:25.064+02:00*/
/* created by        : */
/* generated by      : crainey*/
/* generated from    : /projects/EnvironmentDB/users/crainey/sv_projects/rot_ip/rdl/tmp/secp.rdl*/
/* IDesignSpec rev   : idsbatch v 6.44.8.0 */

/**** This code is generated with following settings ****/
/* Reg Width                  : 32*/
/* Address Unit               : 8*/
/* C++ Types int              : hwint*/
/* Bus Type                   : AMBA3AHBLITE*/
/* BigEndian                  : false*/
/* LittleEndian               : true*/
/* Dist. Decode and Readback  : false*/
/*--------------------------------------------------------------------------------------------------------------- */

/*block : SECP */

#ifndef _SECP_REGS_H_
#define _SECP_REGS_H_
typedef enum  {
    LCM_DEVELOPMENT  =  0,  /*  LCM MODE is Development Mode  */
    LCM_PRODUCTION  =  1  /*  LCM MODE is Prodcution Mode  */
}  SECP_LCM_MODE_e_e ;

typedef enum  {
    PMR_256  =  0,  /*  PMR is 256-bits (8 PMR Entries)  */
    PMR_384  =  1,  /*  PMR is 384-bits (12 PMR Entries)  */
    PMR_512  =  2  /*  PMR is 512-bits (16 PMR Entries)  */
}  SECP_PMR_SIZE_e_e ;


/*section : ROT_KAM */

/*section : KAM_OTP_OTPC */

typedef union {
    struct {
        hwint OTP_CPU_MODE_EN : 1;           /* 0 SW=rw HW=ro 0x0 */
        hwint OTP_SOFT_RST : 1;           /* 1 SW=rw HW=ro 0x0 */
        hwint resv2 : 30;
    } bf;
    hwint  dw;
    
    
} SECP_KAM_OTP_OTPC_CONTROL;

typedef union {
    struct {
        hwint OTP_ADDR : 7;           /* 0:6 SW=rw HW=ro 0x0 */
        hwint resv7 : 25;
    } bf;
    hwint  dw;
    
    
} SECP_KAM_OTP_OTPC_ADDRESS;

typedef union {
    struct {
        hwint START : 1;           /* 0 SW=wo HW=ro 0x0 */
        hwint OTP_CMD : 5;           /* 1:5 SW=rw HW=ro 0x0 */
        hwint resv6 : 26;
    } bf;
    hwint  dw;
    
    
} SECP_KAM_OTP_OTPC_CONTROL0;

typedef union {
    struct {
        hwint DATA_VALID : 1;           /* 0 SW=ro HW=wo 0x0 */
        hwint CMD_DONE : 1;           /* 1 SW=ro HW=wo 0x1 */
        hwint PROGOK : 1;           /* 2 SW=ro HW=wo 0x0 */
        hwint FDONE : 1;           /* 3 SW=ro HW=wo 0x1 */
        hwint CMD_FAIL : 1;           /* 4 SW=ro HW=wo 0x0 */
        hwint REFOK : 1;           /* 5 SW=ro HW=wo 0x0 */
        hwint DEBUG_MODE_SET : 1;           /* 6 SW=ro HW=wo 0x0 */
        hwint MST_FSM_ERROR : 1;           /* 7 SW=ro HW=wo 0x0 */
        hwint DEBUG_ENABLE : 1;           /* 8 SW=ro HW=wo 0x0 */
        hwint INVALID_ADDR : 1;           /* 9 SW=ro HW=wo 0x0 */
        hwint PROG_WORD_FAIL : 1;           /* 10 SW=ro HW=wo 0x0 */
        hwint PROG_SCREEN_FAIL : 1;           /* 11 SW=ro HW=wo 0x0 */
        hwint PROG_BLOCK_CMD : 1;           /* 12 SW=ro HW=wo 0x0 */
        hwint PROG_EN : 1;           /* 13 SW=ro HW=wo 0x1 */
        hwint PRGM_WD_RP_FAIL : 1;           /* 14 SW=ro HW=wo 0x0 */
        hwint MAX_RW : 1;           /* 15 SW=ro HW=wo 0x0 */
        hwint MAX_RWP : 1;           /* 16 SW=ro HW=wo 0x0 */
        hwint AUTO_RW_MAX_SET : 1;           /* 17 SW=ro HW=wo 0x0 */
        hwint MAX_SW : 1;           /* 18 SW=ro HW=wo 0x0 */
        hwint ADDR_IN_ILLEGAL_RANGE : 1;           /* 19 SW=ro HW=wo 0x0 */
        hwint PRESCREEN_FAIL : 1;           /* 20 SW=ro HW=wo 0x0 */
        hwint ECC_CORRECTION_STATUS : 1;           /* 21 SW=ro HW=wo 0x0 */
        hwint ECC_SEC_FLAG_STATUS : 1;           /* 22 SW=ro HW=wo 0x0 */
        hwint ECC_DED_FLAG_STATUS : 1;           /* 23 SW=ro HW=wo 0x0 */
        hwint resv24 : 8;
    } bf;
    hwint  dw;
    
    
} SECP_KAM_OTP_OTPC_STATUS0;

typedef union {
    struct {
        hwint COMMAND_DONE : 1;           /* 0 SW=r/w1c HW=ro 0x0 */
        hwint resv1 : 31;
    } bf;
    hwint  dw;
    
    
} SECP_KAM_OTP_OTPC_STATUS1;

typedef union {
    struct {
        hwint DATA : 32;           /* 0:31 SW=rw HW=ro 0x0 */
    } bf;
    hwint  dw;
    
    
} SECP_KAM_OTP_OTPC_WRITE;

typedef union {
    struct {
        hwint DATA : 32;           /* 0:31 SW=ro HW=wo 0x0 */
    } bf;
    hwint  dw;
    
    
} SECP_KAM_OTP_OTPC_READ;

typedef struct {
    SECP_KAM_OTP_OTPC_CONTROL  KAM_OTP_OTPC_CONTROL;
    SECP_KAM_OTP_OTPC_ADDRESS  KAM_OTP_OTPC_ADDRESS;
    SECP_KAM_OTP_OTPC_CONTROL0  KAM_OTP_OTPC_CONTROL0;
    SECP_KAM_OTP_OTPC_STATUS0  KAM_OTP_OTPC_STATUS0;
    SECP_KAM_OTP_OTPC_STATUS1  KAM_OTP_OTPC_STATUS1;
    
    hwint8 filler5[0x2C];
    
    SECP_KAM_OTP_OTPC_WRITE  KAM_OTP_OTPC_WRITE[0x2];
    
    hwint8 filler6[0x38];
    
    SECP_KAM_OTP_OTPC_READ  KAM_OTP_OTPC_READ[0x2];
    
    
    
} SECP_KAM_OTP_OTPC;

/*section : KAM_OTP_EFC */

typedef union {
    struct {
        hwint START_PGM : 1;           /* 0 SW=rw HW=ro 0x0 */
        hwint START_RD : 1;           /* 1 SW=rw HW=ro 0x0 */
        hwint BYPASS_MODE : 1;           /* 2 SW=rw HW=ro 0x0 */
        hwint IRQ_EN : 1;           /* 3 SW=rw HW=ro 0x0 */
        hwint IRQ_MODE : 1;           /* 4 SW=rw HW=ro 0x0 */
        hwint SWR : 1;           /* 5 SW=rw HW=ro 0x0 */
        hwint MR : 1;           /* 6 SW=rw HW=ro 0x0 */
        hwint resv7 : 25;
    } bf;
    hwint  dw;
    
    
} SECP_KAM_OTP_EFC_CONTROL;

typedef union {
    struct {
        hwint ADDRESS : 16;           /* 0:15 SW=rw HW=ro 0x0 */
        hwint CSB : 1;           /* 16 SW=rw HW=ro 0x1 */
        hwint STB : 1;           /* 17 SW=rw HW=ro 0x0 */
        hwint LOAD : 1;           /* 18 SW=rw HW=ro 0x1 */
        hwint PGEN : 1;           /* 19 SW=rw HW=ro 0x0 */
        hwint resv20 : 12;
    } bf;
    hwint  dw;
    
    
} SECP_KAM_OTP_EFC_BYPASS_CONTROL;

typedef union {
    struct {
        hwint FSM_BUSY : 1;           /* 0 SW=ro HW=ro 0x0 */
        hwint PGM_FSM_BUSY : 1;           /* 1 SW=ro HW=ro 0x0 */
        hwint RD_FSM_BUSY : 1;           /* 2 SW=ro HW=ro 0x0 */
        hwint IRQ_ST_PGM_DONE : 1;           /* 3 SW=r/w1c HW=ro 0x0 */
        hwint IRQ_ST_RD_DONE : 1;           /* 4 SW=r/w1c HW=ro 0x0 */
        
        hwint resv5 : 3;
        hwint CRC_MATCH : 1;           /* 8 SW=ro HW=ro 0x0 */
        
        hwint resv9 : 7;
        hwint CALCULATED_CRC_DATA : 8;           /* 16:23 SW=ro HW=ro 0x0 */
        hwint resv24 : 8;
    } bf;
    hwint  dw;
    
    
} SECP_KAM_OTP_EFC_STATUS;

typedef union {
    struct {
        hwint PS : 1;           /* 0 SW=rw HW=ro 0x0 */
        hwint PD : 1;           /* 1 SW=rw HW=ro 0x1 */
        hwint resv2 : 30;
    } bf;
    hwint  dw;
    
    
} SECP_KAM_OTP_EFC_POWER_CONTROLS;

typedef union {
    struct {
        hwint SETUP_HOLD_TIMING : 4;           /* 0:3 SW=rw HW=ro 0x0 */
        hwint CTRL_TO_STROBE_TIMING : 4;           /* 4:7 SW=rw HW=ro 0x0 */
        hwint SETUP_STROBE_0_TIMING : 8;           /* 8:15 SW=rw HW=ro 0x0 */
        hwint HOLD_STROBE_1_TIMING : 8;           /* 16:23 SW=rw HW=ro 0x0 */
        hwint resv24 : 8;
    } bf;
    hwint  dw;
    
    
} SECP_KAM_OTP_EFC_ACCESS_TIMERS;

typedef union {
    struct {
        hwint EFC_DW_ADDRESS : 8;           /* 0:7 SW=rw HW=ro 0x0 */
        hwint resv8 : 24;
    } bf;
    hwint  dw;
    
    
} SECP_KAM_OTP_EFC_ADDRESS;

typedef union {
    struct {
        hwint PGM_DATA : 32;           /* 0:31 SW=rw HW=ro 0x0 */
    } bf;
    hwint  dw;
    
    
} SECP_KAM_OTP_EFC_PGM_DATA;

typedef union {
    struct {
        hwint RD_DATA : 32;           /* 0:31 SW=ro HW=ro 0x0 */
    } bf;
    hwint  dw;
    
    
} SECP_KAM_OTP_EFC_RD_DATA;

typedef struct {
    SECP_KAM_OTP_EFC_CONTROL  KAM_OTP_EFC_CONTROL;
    SECP_KAM_OTP_EFC_BYPASS_CONTROL  KAM_OTP_EFC_BYPASS_CONTROL;
    SECP_KAM_OTP_EFC_STATUS  KAM_OTP_EFC_STATUS;
    SECP_KAM_OTP_EFC_POWER_CONTROLS  KAM_OTP_EFC_POWER_CONTROLS;
    SECP_KAM_OTP_EFC_ACCESS_TIMERS  KAM_OTP_EFC_ACCESS_TIMERS;
    SECP_KAM_OTP_EFC_ADDRESS  KAM_OTP_EFC_ADDRESS;
    SECP_KAM_OTP_EFC_PGM_DATA  KAM_OTP_EFC_PGM_DATA;
    SECP_KAM_OTP_EFC_RD_DATA  KAM_OTP_EFC_RD_DATA;
    
    
    
} SECP_KAM_OTP_EFC;

/*section : KAM_OTP_LANE */

/*  CONFIG DESCRIPTION :Define a range of OTP rows for the OTP Access Filter. These fields cannot be written when KAM_LANE_ACCESS.OTP_LANE_LOCK is set. OTP Lanes should not overlap (i.e. and OTP Row should reside in 0 or 1 OTP Lanes) - but if an OTP row resides in more than one lane, any READ/PROPGRAM restriction in one lane will be honored */
typedef union {
    struct {
        hwint LANE_START : 10;           /* 0:9 SW=rw HW=ro 0x0 */
        
        hwint resv10 : 6;
        hwint LANE_COUNT : 6;           /* 16:21 SW=rw HW=ro 0x0 */
        
        hwint resv22 : 9;
        hwint LANE_ENABLE : 1;           /* 31 SW=rw HW=ro 0x0 */
    } bf;
    hwint  dw;
    
    
} SECP_CONFIG;

/*  ACCESS DESCRIPTION :Firmware programs the accesibility of OTP LANE[i] . When LCM_MODE == PRODUCTION, and when the KAM_OAF_EN OTP Hardware Control bit is set, <li> when 0, RE and WE restrict read and write access of an OTP Lane <li> once RE/WE = 0, they are latched low */
typedef union {
    struct {
        hwint WE : 1;           /* 0 SW=rw HW=ro 0x1 */
        hwint RE : 1;           /* 1 SW=rw HW=ro 0x1 */
        hwint OTP_LANE_LOCK : 1;           /* 2 SW=rw HW=na 0x0 */
        hwint resv3 : 29;
    } bf;
    hwint  dw;
    
    
} SECP_KAM_OTP_LANE_ACCESS;

typedef union {
    struct {
        hwint READ_DENY : 1;           /* 0 SW=r/w1c HW=rw 0x0 */
        hwint WRITE_DENY : 1;           /* 1 SW=r/w1c HW=rw 0x0 */
        hwint resv2 : 30;
    } bf;
    hwint  dw;
    
    
} SECP_KAM_OTP_LANE_STATUS;

typedef struct {
    SECP_CONFIG  CONFIG;
    SECP_KAM_OTP_LANE_ACCESS  ACCESS;
    SECP_KAM_OTP_LANE_STATUS  STATUS;
    
    
    
} SECP_KAM_OTP_LANE;

typedef union {
    struct {
        hwint VALID : 1;           /* 0 SW=rw HW=ro 0x0 */
        hwint resv1 : 31;
    } bf;
    hwint  dw;
    
    
} SECP_KAM_OTP_HW_CONTROL_VALID;

typedef union {
    struct {
        hwint ROT_DEBUG : 1;           /* 0 SW=rw HW=rw 0x1 */
        hwint SOC_DEBUG : 1;           /* 1 SW=rw HW=rw 0x1 */
        hwint UART_DISABLE : 1;           /* 2 SW=rw HW=rw 0x1 */
        hwint ROT_ROM_BOOT_SRC : 1;           /* 3 SW=rw HW=rw 0x1 */
        hwint SEC_LOAD_FAIL_REPORT : 1;           /* 4 SW=rw HW=rw 0x1 */
        hwint SOFT_RESET_DISABLE : 1;           /* 5 SW=rw HW=rw 0x1 */
        hwint RESERVED_0 : 1;           /* 6 SW=rw HW=ro 0x1 */
        hwint ROT_EXCLUSIVE_ACCESS : 1;           /* 7 SW=rw HW=ro 0x1 */
        hwint RESERVED_1 : 1;           /* 8 SW=rw HW=ro 0x1 */
        hwint KAM_HWC_LOCK_ENABLE : 1;           /* 9 SW=rw HW=ro 0x1 */
        hwint KAM_OAF_EN : 1;           /* 10 SW=rw HW=ro 0x1 */
        hwint KAM_KV_EN : 1;           /* 11 SW=rw HW=ro 0x1 */
        hwint LCM_MODE : 1;           /* 12 SW=rw HW=ro 0x1 */
        
        hwint resv13 : 16;
        hwint AUTOLOAD_ERR : 1;           /* 29 SW=ro HW=rw 0x0 */
        hwint AUTOLOAD_VALID : 1;           /* 30 SW=ro HW=rw 0x0 */
        hwint HWC_VALID : 1;           /* 31 SW=ro HW=rw 0x0 */
    } bf;
    hwint  dw;
    
    
} SECP_KAM_OTP_HW_CONTROL;

/*section : KAM_KV */

/*  RANGE DESCRIPTION :Define a range in SCRATCH memory for Key Vault. These fields cannot be written when KAM_KV[i].ACCESS.KV_RANGE_LOCK is set */
typedef union {
    struct {
        
        hwint resv0 : 4;
        hwint KV_START : 8;           /* 4:11 SW=rw HW=ro 0x0 */
        
        hwint resv12 : 4;
        hwint KV_COUNT : 8;           /* 16:23 SW=rw HW=ro 0x0 */
        
        hwint resv24 : 7;
        hwint KV_ENABLE : 1;           /* 31 SW=rw HW=ro 0x0 */
    } bf;
    hwint  dw;
    
    
} SECP_RANGE;

/*  ACCESS DESCRIPTION :Firmware programs the accesibility of KV range[i] (in SCRATCH RAM). When LCM_MODE == PRODUCTION, and when the KAM_KV_EN OTP Hardware Control bit is set, <li> RE and WE restrict read and write access of a range when not set <li> once RE/WE = 0, they are latched low */
typedef union {
    struct {
        hwint WE : 1;           /* 0 SW=rw HW=ro 0x1 */
        hwint RE : 1;           /* 1 SW=rw HW=ro 0x1 */
        hwint KV_RANGE_LOCK : 1;           /* 2 SW=rw HW=na 0x0 */
        hwint resv3 : 29;
    } bf;
    hwint  dw;
    
    
} SECP_KAM_KV_ACCESS;

typedef union {
    struct {
        hwint READ_DENY : 1;           /* 0 SW=r/w1c HW=rw 0x0 */
        hwint WRITE_DENY : 1;           /* 1 SW=r/w1c HW=rw 0x0 */
        hwint resv2 : 30;
    } bf;
    hwint  dw;
    
    
} SECP_KAM_KV_STATUS;

typedef struct {
    SECP_RANGE  RANGE;
    SECP_KAM_KV_ACCESS  ACCESS;
    SECP_KAM_KV_STATUS  STATUS;
    
    
    
} SECP_KAM_KV;

/*section : KAM_PMR_LIST */

/*  KAM_PMR_ENTRY DESCRIPTION :Platform Configuration Registers (PMR). Each PMR slot contains 16 32-bit PMR values. 4,8,12, or 32 DATA regs comprise a PMR. */
typedef union {
    struct {
        hwint DATA : 32;           /* 0:31 SW=rw HW=wo 0x0 */
    } bf;
    hwint  dw;
    
    
} SECP_KAM_PMR_ENTRY;

typedef struct {
    SECP_KAM_PMR_ENTRY  KAM_PMR_ENTRY[0x10];
    
    
    
} SECP_KAM_PMR_LIST;

typedef union {
    struct {
        hwint PMR_VALID : 16;           /* 0:15 SW=ro HW=wo 0x0 */
        hwint resv16 : 16;
    } bf;
    hwint  dw;
    
    
} SECP_KAM_PMR_STATUS;

typedef union {
    struct {
        hwint ADDR : 32;           /* 0:31 SW=rw HW=ro 0x0 */
    } bf;
    hwint  dw;
    
    
} SECP_KAM_PMR_EXTEND_MEASUREMENT_SRC;

/*  KAM_PMR_EXTEND_TARGET DESCRIPTION :Writing this register starts the PMR Extend operation. PMR[PMR_INDEX] = SHA ( PMR[PMR_INDEX] | MSG ) when PMR[PMR_INDEX] is valid (i.e. PMR_ENRY_VALID[PMR_INDEX] are set for all words indicated by PMR_SIZE) otherwise (invalid PMR[PMR_INDEX]): PMR[PMR_INDEX] = SHA ( MSG ) */
typedef union {
    struct {
        hwint PMR_INDEX : 3;           /* 0:2 SW=rw HW=ro 0x0 */
        
        hwint resv3 : 1;
        hwint PMR_SIZE : 2;           /* 4:5 SW=rw HW=ro 0x0 */
        hwint resv6 : 26;
    } bf;
    hwint  dw;
    
    
} SECP_KAM_PMR_EXTEND_TARGET;

/*  KAM_PMR_SHA_CONFIG DESCRIPTION :Writable only by KAM PMR Extend function. Readable by any */
typedef union {
    struct {
        hwint BYTE_SWAP_OUT : 1;           /* 0 SW=rw HW=rw 0x0 */
        hwint BYTE_SWAP_IN : 1;           /* 1 SW=rw HW=rw 0x0 */
        
        hwint resv2 : 2;
        hwint DMA_IN : 1;           /* 4 SW=rw HW=rw 0x0 */
        
        hwint resv5 : 3;
        hwint IN_LEVEL : 8;           /* 8:15 SW=rw HW=ro 0x0 */
        hwint KEY_SIZE : 3;           /* 16:18 SW=rw HW=rw 0x1 */
        
        hwint resv19 : 5;
        hwint MODE : 7;           /* 24:30 SW=rw HW=rw 0x1 */
        hwint resv31 : 1;
    } bf;
    hwint  dw;
    
    
} SECP_KAM_PMR_SHA_CONFIG;

typedef union {
    struct {
        hwint ALERT : 1;           /* 0 SW=rw HW=rw 0x0 */
        hwint ERR : 1;           /* 1 SW=rw HW=rw 0x0 */
        hwint IN_FIFO_AE : 1;           /* 2 SW=rw HW=rw 0x1 */
        hwint GEN_DONE : 1;           /* 3 SW=rw HW=rw 0x0 */
        hwint VERIFY_DONE : 1;           /* 4 SW=rw HW=rw 0x0 */
        hwint resv5 : 27;
    } bf;
    hwint  dw;
    
    
} SECP_KAM_PMR_SHA_INTR;

typedef union {
    struct {
        hwint ENABLE : 1;           /* 0 SW=rw HW=ro 0x0 */
        hwint ERR_CLEAR : 1;           /* 1 SW=rw HW=ro 0x0 */
        hwint ERR_DB_INSERT : 1;           /* 2 SW=rw HW=ro 0x0 */
        hwint ERR_SB_INSERT : 1;           /* 3 SW=rw HW=ro 0x0 */
        hwint resv4 : 28;
    } bf;
    hwint  dw;
    
    
} SECP_KAM_ECC_CTRL_PMR;

typedef union {
    struct {
        hwint ADDR : 15;           /* 0:14 SW=ro HW=wo 0x0 */
        
        hwint resv15 : 1;
        hwint ECC : 7;           /* 16:22 SW=ro HW=wo 0x0 */
        
        hwint resv23 : 1;
        hwint ERR_COUNT : 4;           /* 24:27 SW=ro HW=wo 0x0 */
        
        hwint resv28 : 2;
        hwint ERR_SB : 1;           /* 30 SW=ro HW=wo 0x0 */
        hwint ERR_DB : 1;           /* 31 SW=ro HW=wo 0x0 */
    } bf;
    hwint  dw;
    
    
} SECP_KAM_ECC_STATUS_PMR;

typedef union {
    struct {
        hwint DATA : 32;           /* 0:31 SW=ro HW=wo 0x0 */
    } bf;
    hwint  dw;
    
    
} SECP_KAM_ECC_LOG_PMR;

typedef union {
    struct {
        hwint SHA_UNAUTHORIZED : 1;           /* 0 SW=r/w1c HW=rw 0x0 */
        hwint PMR_EXTEND_ABORT : 1;           /* 1 SW=r/w1c HW=rw 0x0 */
        hwint ECC_SB_PMR : 1;           /* 2 SW=ro HW=rw 0x0 */
        hwint ECC_DB_PMR : 1;           /* 3 SW=ro HW=rw 0x0 */
        hwint resv4 : 28;
    } bf;
    hwint  dw;
    
    
} SECP_KAM_ERR_STATUS;

typedef union {
    struct {
        hwint ALERT : 1;           /* 0 SW=r/w1c HW=rw 0x0 */
        hwint ERR : 1;           /* 1 SW=r/w1c HW=rw 0x0 */
        hwint PMR_EXTEND_COMPLETE : 1;           /* 2 SW=r/w1c HW=rw 0x0 */
        hwint KV_READ_DENY : 1;           /* 3 SW=r/w1c HW=rw 0x0 */
        hwint KV_WRITE_DENY : 1;           /* 4 SW=r/w1c HW=rw 0x0 */
        hwint OTP_READ_DENY : 1;           /* 5 SW=r/w1c HW=rw 0x0 */
        hwint OTP_WRITE_DENY : 1;           /* 6 SW=r/w1c HW=rw 0x0 */
        hwint OTPC_INT : 1;           /* 7 SW=r/w1c HW=rw 0x0 */
        hwint resv8 : 24;
    } bf;
    hwint  dw;
    
    
} SECP_KAM_INTR_STATE;

typedef union {
    struct {
        hwint ALERT : 1;           /* 0 SW=rw HW=ro 0x1 */
        hwint ERR : 1;           /* 1 SW=rw HW=ro 0x1 */
        hwint PMR_EXTEND_COMPLETE : 1;           /* 2 SW=rw HW=ro 0x0 */
        hwint KV_READ_DENY : 1;           /* 3 SW=rw HW=ro 0x0 */
        hwint KV_WRITE_DENY : 1;           /* 4 SW=rw HW=ro 0x0 */
        hwint OTP_READ_DENY : 1;           /* 5 SW=rw HW=ro 0x0 */
        hwint OTP_WRITE_DENY : 1;           /* 6 SW=rw HW=ro 0x0 */
        hwint OTPC_INT : 1;           /* 7 SW=rw HW=ro 0x0 */
        hwint resv8 : 24;
    } bf;
    hwint  dw;
    
    
} SECP_KAM_INTR_ENABLE;

typedef union {
    struct {
        hwint ALERT : 1;           /* 0 SW=rw HW=ro 0x0 */
        hwint ERR : 1;           /* 1 SW=rw HW=ro 0x0 */
        hwint PMR_EXTEND_COMPLETE : 1;           /* 2 SW=rw HW=ro 0x0 */
        hwint KV_READ_DENY : 1;           /* 3 SW=rw HW=ro 0x0 */
        hwint KV_WRITE_DENY : 1;           /* 4 SW=rw HW=ro 0x0 */
        hwint OTP_READ_DENY : 1;           /* 5 SW=rw HW=ro 0x0 */
        hwint OTP_WRITE_DENY : 1;           /* 6 SW=rw HW=ro 0x0 */
        hwint OTPC_INT : 1;           /* 7 SW=rw HW=ro 0x0 */
        hwint resv8 : 24;
    } bf;
    hwint  dw;
    
    
} SECP_KAM_INTR_TEST;

typedef union {
    struct {
        hwint DATA : 32;           /* 0:31 SW=rw HW=na 0x0 */
    } bf;
    hwint  dw;
    
    
} SECP_KAM_SCRATCH;

typedef struct {
    
    union {
        SECP_KAM_OTP_OTPC s;
        hwint8 filler[0x88];
    } KAM_OTP_OTPC;
    
    hwint8 filler1[0x78];
    
    
    union {
        SECP_KAM_OTP_EFC s;
        hwint8 filler[0x20];
    } KAM_OTP_EFC;
    
    hwint8 filler2[0xE0];
    
    
    union {
        SECP_KAM_OTP_LANE s;
        hwint8 filler[0xC];
    } KAM_OTP_LANE[0x8];
    SECP_KAM_OTP_HW_CONTROL_VALID  KAM_OTP_HW_CONTROL_VALID;
    SECP_KAM_OTP_HW_CONTROL  KAM_OTP_HW_CONTROL;
    
    hwint8 filler5[0x98];
    
    
    union {
        SECP_KAM_KV s;
        hwint8 filler[0xC];
    } KAM_KV[0x2];
    
    hwint8 filler6[0xE8];
    
    
    union {
        SECP_KAM_PMR_LIST s;
        hwint8 filler[0x40];
    } KAM_PMR_LIST[0x8];
    SECP_KAM_PMR_STATUS  KAM_PMR_STATUS[0x8];
    SECP_KAM_PMR_EXTEND_MEASUREMENT_SRC  KAM_PMR_EXTEND_MEASUREMENT_SRC;
    SECP_KAM_PMR_EXTEND_TARGET  KAM_PMR_EXTEND_TARGET;
    SECP_KAM_PMR_SHA_CONFIG  KAM_PMR_SHA_CONFIG;
    SECP_KAM_PMR_SHA_INTR  KAM_PMR_SHA_INTR;
    SECP_KAM_ECC_CTRL_PMR  KAM_ECC_CTRL_PMR;
    SECP_KAM_ECC_STATUS_PMR  KAM_ECC_STATUS_PMR;
    SECP_KAM_ECC_LOG_PMR  KAM_ECC_LOG_PMR;
    SECP_KAM_ERR_STATUS  KAM_ERR_STATUS;
    SECP_KAM_INTR_STATE  KAM_INTR_STATE;
    SECP_KAM_INTR_ENABLE  KAM_INTR_ENABLE;
    SECP_KAM_INTR_TEST  KAM_INTR_TEST;
    SECP_KAM_SCRATCH  KAM_SCRATCH;
    
    
    
} SECP_ROT_KAM;

typedef struct {
    
    hwint8 filler0[0x88000];
    
    
    union {
        SECP_ROT_KAM s;
        hwint8 filler[0x650];
    } ROT_KAM;
    
    
    
} SECP_s;

#define SECP_KAM_OTP_OTPC_CONTROL_READMASK 0x3
#define SECP_KAM_OTP_OTPC_CONTROL_WRITEMASK 0x3
#define SECP_KAM_OTP_OTPC_CONTROL_VOLATILEMASK 0x0
#define SECP_KAM_OTP_OTPC_CONTROL_RESETMASK 0x3
#define SECP_KAM_OTP_OTPC_CONTROL_DEFAULT 0x00000000

#define SECP_KAM_OTP_OTPC_ADDRESS_READMASK 0x7F
#define SECP_KAM_OTP_OTPC_ADDRESS_WRITEMASK 0x7F
#define SECP_KAM_OTP_OTPC_ADDRESS_VOLATILEMASK 0x0
#define SECP_KAM_OTP_OTPC_ADDRESS_RESETMASK 0x7F
#define SECP_KAM_OTP_OTPC_ADDRESS_DEFAULT 0x00000000

#define SECP_KAM_OTP_OTPC_CONTROL0_READMASK 0x3E
#define SECP_KAM_OTP_OTPC_CONTROL0_WRITEMASK 0x3F
#define SECP_KAM_OTP_OTPC_CONTROL0_VOLATILEMASK 0x0
#define SECP_KAM_OTP_OTPC_CONTROL0_RESETMASK 0x3F
#define SECP_KAM_OTP_OTPC_CONTROL0_DEFAULT 0x00000000

#define SECP_KAM_OTP_OTPC_STATUS0_READMASK 0xFFFFFF
#define SECP_KAM_OTP_OTPC_STATUS0_WRITEMASK 0x0
#define SECP_KAM_OTP_OTPC_STATUS0_VOLATILEMASK 0xFFFFFF
#define SECP_KAM_OTP_OTPC_STATUS0_RESETMASK 0xFFFFFF
#define SECP_KAM_OTP_OTPC_STATUS0_DEFAULT 0x0000200A

#define SECP_KAM_OTP_OTPC_STATUS1_READMASK 0x1
#define SECP_KAM_OTP_OTPC_STATUS1_WRITEMASK 0x1
#define SECP_KAM_OTP_OTPC_STATUS1_VOLATILEMASK 0x0
#define SECP_KAM_OTP_OTPC_STATUS1_RESETMASK 0x1
#define SECP_KAM_OTP_OTPC_STATUS1_DEFAULT 0x00000000

#define SECP_KAM_OTP_OTPC_WRITE_READMASK 0xFFFFFFFF
#define SECP_KAM_OTP_OTPC_WRITE_WRITEMASK 0xFFFFFFFF
#define SECP_KAM_OTP_OTPC_WRITE_VOLATILEMASK 0x0
#define SECP_KAM_OTP_OTPC_WRITE_RESETMASK 0xFFFFFFFF
#define SECP_KAM_OTP_OTPC_WRITE_DEFAULT 0x00000000

#define SECP_KAM_OTP_OTPC_READ_READMASK 0xFFFFFFFF
#define SECP_KAM_OTP_OTPC_READ_WRITEMASK 0x0
#define SECP_KAM_OTP_OTPC_READ_VOLATILEMASK 0xFFFFFFFF
#define SECP_KAM_OTP_OTPC_READ_RESETMASK 0xFFFFFFFF
#define SECP_KAM_OTP_OTPC_READ_DEFAULT 0x00000000

#define SECP_KAM_OTP_EFC_CONTROL_READMASK 0x7F
#define SECP_KAM_OTP_EFC_CONTROL_WRITEMASK 0x7F
#define SECP_KAM_OTP_EFC_CONTROL_VOLATILEMASK 0x0
#define SECP_KAM_OTP_EFC_CONTROL_RESETMASK 0x7F
#define SECP_KAM_OTP_EFC_CONTROL_DEFAULT 0x00000000

#define SECP_KAM_OTP_EFC_BYPASS_CONTROL_READMASK 0xFFFFF
#define SECP_KAM_OTP_EFC_BYPASS_CONTROL_WRITEMASK 0xFFFFF
#define SECP_KAM_OTP_EFC_BYPASS_CONTROL_VOLATILEMASK 0x0
#define SECP_KAM_OTP_EFC_BYPASS_CONTROL_RESETMASK 0xFFFFF
#define SECP_KAM_OTP_EFC_BYPASS_CONTROL_DEFAULT 0x00050000

#define SECP_KAM_OTP_EFC_STATUS_READMASK 0xFF011F
#define SECP_KAM_OTP_EFC_STATUS_WRITEMASK 0x18
#define SECP_KAM_OTP_EFC_STATUS_VOLATILEMASK 0x0
#define SECP_KAM_OTP_EFC_STATUS_RESETMASK 0xFF011F
#define SECP_KAM_OTP_EFC_STATUS_DEFAULT 0x00000000

#define SECP_KAM_OTP_EFC_POWER_CONTROLS_READMASK 0x3
#define SECP_KAM_OTP_EFC_POWER_CONTROLS_WRITEMASK 0x3
#define SECP_KAM_OTP_EFC_POWER_CONTROLS_VOLATILEMASK 0x0
#define SECP_KAM_OTP_EFC_POWER_CONTROLS_RESETMASK 0x3
#define SECP_KAM_OTP_EFC_POWER_CONTROLS_DEFAULT 0x00000002

#define SECP_KAM_OTP_EFC_ACCESS_TIMERS_READMASK 0xFFFFFF
#define SECP_KAM_OTP_EFC_ACCESS_TIMERS_WRITEMASK 0xFFFFFF
#define SECP_KAM_OTP_EFC_ACCESS_TIMERS_VOLATILEMASK 0x0
#define SECP_KAM_OTP_EFC_ACCESS_TIMERS_RESETMASK 0xFFFFFF
#define SECP_KAM_OTP_EFC_ACCESS_TIMERS_DEFAULT 0x00000000

#define SECP_KAM_OTP_EFC_ADDRESS_READMASK 0xFF
#define SECP_KAM_OTP_EFC_ADDRESS_WRITEMASK 0xFF
#define SECP_KAM_OTP_EFC_ADDRESS_VOLATILEMASK 0x0
#define SECP_KAM_OTP_EFC_ADDRESS_RESETMASK 0xFF
#define SECP_KAM_OTP_EFC_ADDRESS_DEFAULT 0x00000000

#define SECP_KAM_OTP_EFC_PGM_DATA_READMASK 0xFFFFFFFF
#define SECP_KAM_OTP_EFC_PGM_DATA_WRITEMASK 0xFFFFFFFF
#define SECP_KAM_OTP_EFC_PGM_DATA_VOLATILEMASK 0x0
#define SECP_KAM_OTP_EFC_PGM_DATA_RESETMASK 0xFFFFFFFF
#define SECP_KAM_OTP_EFC_PGM_DATA_DEFAULT 0x00000000

#define SECP_KAM_OTP_EFC_RD_DATA_READMASK 0xFFFFFFFF
#define SECP_KAM_OTP_EFC_RD_DATA_WRITEMASK 0x0
#define SECP_KAM_OTP_EFC_RD_DATA_VOLATILEMASK 0x0
#define SECP_KAM_OTP_EFC_RD_DATA_RESETMASK 0xFFFFFFFF
#define SECP_KAM_OTP_EFC_RD_DATA_DEFAULT 0x00000000

#define SECP_CONFIG_READMASK 0x803F03FF
#define SECP_CONFIG_WRITEMASK 0x803F03FF
#define SECP_CONFIG_VOLATILEMASK 0x0
#define SECP_CONFIG_RESETMASK 0x803F03FF
#define SECP_CONFIG_DEFAULT 0x00000000

#define SECP_KAM_OTP_LANE_ACCESS_READMASK 0x7
#define SECP_KAM_OTP_LANE_ACCESS_WRITEMASK 0x7
#define SECP_KAM_OTP_LANE_ACCESS_VOLATILEMASK 0x0
#define SECP_KAM_OTP_LANE_ACCESS_RESETMASK 0x7
#define SECP_KAM_OTP_LANE_ACCESS_DEFAULT 0x00000003

#define SECP_KAM_OTP_LANE_STATUS_READMASK 0x3
#define SECP_KAM_OTP_LANE_STATUS_WRITEMASK 0x3
#define SECP_KAM_OTP_LANE_STATUS_VOLATILEMASK 0x3
#define SECP_KAM_OTP_LANE_STATUS_RESETMASK 0x3
#define SECP_KAM_OTP_LANE_STATUS_DEFAULT 0x00000000

#define SECP_KAM_OTP_HW_CONTROL_VALID_READMASK 0x1
#define SECP_KAM_OTP_HW_CONTROL_VALID_WRITEMASK 0x1
#define SECP_KAM_OTP_HW_CONTROL_VALID_VOLATILEMASK 0x0
#define SECP_KAM_OTP_HW_CONTROL_VALID_RESETMASK 0x1
#define SECP_KAM_OTP_HW_CONTROL_VALID_DEFAULT 0x00000000

#define SECP_KAM_OTP_HW_CONTROL_READMASK 0xE0001FFF
#define SECP_KAM_OTP_HW_CONTROL_WRITEMASK 0x1FFF
#define SECP_KAM_OTP_HW_CONTROL_VOLATILEMASK 0xE000003F
#define SECP_KAM_OTP_HW_CONTROL_RESETMASK 0xE0001FFF
#define SECP_KAM_OTP_HW_CONTROL_DEFAULT 0x00001FFF

#define SECP_RANGE_READMASK 0x80FF0FF0
#define SECP_RANGE_WRITEMASK 0x80FF0FF0
#define SECP_RANGE_VOLATILEMASK 0x0
#define SECP_RANGE_RESETMASK 0x80FF0FF0
#define SECP_RANGE_DEFAULT 0x00000000

#define SECP_KAM_KV_ACCESS_READMASK 0x7
#define SECP_KAM_KV_ACCESS_WRITEMASK 0x7
#define SECP_KAM_KV_ACCESS_VOLATILEMASK 0x0
#define SECP_KAM_KV_ACCESS_RESETMASK 0x7
#define SECP_KAM_KV_ACCESS_DEFAULT 0x00000003

#define SECP_KAM_KV_STATUS_READMASK 0x3
#define SECP_KAM_KV_STATUS_WRITEMASK 0x3
#define SECP_KAM_KV_STATUS_VOLATILEMASK 0x3
#define SECP_KAM_KV_STATUS_RESETMASK 0x3
#define SECP_KAM_KV_STATUS_DEFAULT 0x00000000

#define SECP_KAM_PMR_ENTRY_READMASK 0xFFFFFFFF
#define SECP_KAM_PMR_ENTRY_WRITEMASK 0xFFFFFFFF
#define SECP_KAM_PMR_ENTRY_VOLATILEMASK 0xFFFFFFFF
#define SECP_KAM_PMR_ENTRY_RESETMASK 0xFFFFFFFF
#define SECP_KAM_PMR_ENTRY_DEFAULT 0x00000000

#define SECP_KAM_PMR_STATUS_READMASK 0xFFFF
#define SECP_KAM_PMR_STATUS_WRITEMASK 0x0
#define SECP_KAM_PMR_STATUS_VOLATILEMASK 0xFFFF
#define SECP_KAM_PMR_STATUS_RESETMASK 0xFFFF
#define SECP_KAM_PMR_STATUS_DEFAULT 0x00000000

#define SECP_KAM_PMR_EXTEND_MEASUREMENT_SRC_READMASK 0xFFFFFFFF
#define SECP_KAM_PMR_EXTEND_MEASUREMENT_SRC_WRITEMASK 0xFFFFFFFF
#define SECP_KAM_PMR_EXTEND_MEASUREMENT_SRC_VOLATILEMASK 0x0
#define SECP_KAM_PMR_EXTEND_MEASUREMENT_SRC_RESETMASK 0xFFFFFFFF
#define SECP_KAM_PMR_EXTEND_MEASUREMENT_SRC_DEFAULT 0x00000000

#define SECP_KAM_PMR_EXTEND_TARGET_READMASK 0x37
#define SECP_KAM_PMR_EXTEND_TARGET_WRITEMASK 0x37
#define SECP_KAM_PMR_EXTEND_TARGET_VOLATILEMASK 0x0
#define SECP_KAM_PMR_EXTEND_TARGET_RESETMASK 0x37
#define SECP_KAM_PMR_EXTEND_TARGET_DEFAULT 0x00000000

#define SECP_KAM_PMR_SHA_CONFIG_READMASK 0x7F07FF13
#define SECP_KAM_PMR_SHA_CONFIG_WRITEMASK 0x7F07FF13
#define SECP_KAM_PMR_SHA_CONFIG_VOLATILEMASK 0x7F070013
#define SECP_KAM_PMR_SHA_CONFIG_RESETMASK 0x7F07FF13
#define SECP_KAM_PMR_SHA_CONFIG_DEFAULT 0x01010000

#define SECP_KAM_PMR_SHA_INTR_READMASK 0x1F
#define SECP_KAM_PMR_SHA_INTR_WRITEMASK 0x1F
#define SECP_KAM_PMR_SHA_INTR_VOLATILEMASK 0x1F
#define SECP_KAM_PMR_SHA_INTR_RESETMASK 0x1F
#define SECP_KAM_PMR_SHA_INTR_DEFAULT 0x00000004

#define SECP_KAM_ECC_CTRL_PMR_READMASK 0xF
#define SECP_KAM_ECC_CTRL_PMR_WRITEMASK 0xF
#define SECP_KAM_ECC_CTRL_PMR_VOLATILEMASK 0x0
#define SECP_KAM_ECC_CTRL_PMR_RESETMASK 0xF
#define SECP_KAM_ECC_CTRL_PMR_DEFAULT 0x00000000

#define SECP_KAM_ECC_STATUS_PMR_READMASK 0xCF7F7FFF
#define SECP_KAM_ECC_STATUS_PMR_WRITEMASK 0x0
#define SECP_KAM_ECC_STATUS_PMR_VOLATILEMASK 0xCF7F7FFF
#define SECP_KAM_ECC_STATUS_PMR_RESETMASK 0xCF7F7FFF
#define SECP_KAM_ECC_STATUS_PMR_DEFAULT 0x00000000

#define SECP_KAM_ECC_LOG_PMR_READMASK 0xFFFFFFFF
#define SECP_KAM_ECC_LOG_PMR_WRITEMASK 0x0
#define SECP_KAM_ECC_LOG_PMR_VOLATILEMASK 0xFFFFFFFF
#define SECP_KAM_ECC_LOG_PMR_RESETMASK 0xFFFFFFFF
#define SECP_KAM_ECC_LOG_PMR_DEFAULT 0x00000000

#define SECP_KAM_ERR_STATUS_READMASK 0xF
#define SECP_KAM_ERR_STATUS_WRITEMASK 0x3
#define SECP_KAM_ERR_STATUS_VOLATILEMASK 0xF
#define SECP_KAM_ERR_STATUS_RESETMASK 0xF
#define SECP_KAM_ERR_STATUS_DEFAULT 0x00000000

#define SECP_KAM_INTR_STATE_READMASK 0xFF
#define SECP_KAM_INTR_STATE_WRITEMASK 0xFF
#define SECP_KAM_INTR_STATE_VOLATILEMASK 0xFF
#define SECP_KAM_INTR_STATE_RESETMASK 0xFF
#define SECP_KAM_INTR_STATE_DEFAULT 0x00000000

#define SECP_KAM_INTR_ENABLE_READMASK 0xFF
#define SECP_KAM_INTR_ENABLE_WRITEMASK 0xFF
#define SECP_KAM_INTR_ENABLE_VOLATILEMASK 0x0
#define SECP_KAM_INTR_ENABLE_RESETMASK 0xFF
#define SECP_KAM_INTR_ENABLE_DEFAULT 0x00000003

#define SECP_KAM_INTR_TEST_READMASK 0xFF
#define SECP_KAM_INTR_TEST_WRITEMASK 0xFF
#define SECP_KAM_INTR_TEST_VOLATILEMASK 0x0
#define SECP_KAM_INTR_TEST_RESETMASK 0xFF
#define SECP_KAM_INTR_TEST_DEFAULT 0x00000000

#define SECP_KAM_SCRATCH_READMASK 0xFFFFFFFF
#define SECP_KAM_SCRATCH_WRITEMASK 0xFFFFFFFF
#define SECP_KAM_SCRATCH_VOLATILEMASK 0x0
#define SECP_KAM_SCRATCH_RESETMASK 0xFFFFFFFF
#define SECP_KAM_SCRATCH_DEFAULT 0x00000000

#define SECP_s_SIZE 0x88650

#define SECP_ROT_KAM_SIZE 0x650

#define SECP_KAM_OTP_OTPC_SIZE 0x88

#define SECP_KAM_OTP_OTPC_CONTROL_SIZE 0x4

#define SECP_KAM_OTP_OTPC_ADDRESS_SIZE 0x4

#define SECP_KAM_OTP_OTPC_CONTROL0_SIZE 0x4

#define SECP_KAM_OTP_OTPC_STATUS0_SIZE 0x4

#define SECP_KAM_OTP_OTPC_STATUS1_SIZE 0x4

#define SECP_KAM_OTP_OTPC_WRITE_SIZE 0x8
#define SECP_KAM_OTP_OTPC_WRITE_PER_INSTANCE_SIZE 0x4
#define SECP_KAM_OTP_OTPC_WRITE_COUNT 2
#define SECP_KAM_OTP_OTPC_READ_SIZE 0x8
#define SECP_KAM_OTP_OTPC_READ_PER_INSTANCE_SIZE 0x4
#define SECP_KAM_OTP_OTPC_READ_COUNT 2
#define SECP_KAM_OTP_EFC_SIZE 0x20

#define SECP_KAM_OTP_EFC_CONTROL_SIZE 0x4

#define SECP_KAM_OTP_EFC_BYPASS_CONTROL_SIZE 0x4

#define SECP_KAM_OTP_EFC_STATUS_SIZE 0x4

#define SECP_KAM_OTP_EFC_POWER_CONTROLS_SIZE 0x4

#define SECP_KAM_OTP_EFC_ACCESS_TIMERS_SIZE 0x4

#define SECP_KAM_OTP_EFC_ADDRESS_SIZE 0x4

#define SECP_KAM_OTP_EFC_PGM_DATA_SIZE 0x4

#define SECP_KAM_OTP_EFC_RD_DATA_SIZE 0x4

#define SECP_KAM_OTP_LANE_SIZE 0x60
#define SECP_KAM_OTP_LANE_PER_INSTANCE_SIZE 0xC
#define SECP_KAM_OTP_LANE_COUNT 8
#define SECP_CONFIG_SIZE 0x4

#define SECP_KAM_OTP_LANE_ACCESS_SIZE 0x4

#define SECP_KAM_OTP_LANE_STATUS_SIZE 0x4

#define SECP_KAM_OTP_HW_CONTROL_VALID_SIZE 0x4

#define SECP_KAM_OTP_HW_CONTROL_SIZE 0x4

#define SECP_KAM_KV_SIZE 0x18
#define SECP_KAM_KV_PER_INSTANCE_SIZE 0xC
#define SECP_KAM_KV_COUNT 2
#define SECP_RANGE_SIZE 0x4

#define SECP_KAM_KV_ACCESS_SIZE 0x4

#define SECP_KAM_KV_STATUS_SIZE 0x4

#define SECP_KAM_PMR_LIST_SIZE 0x200
#define SECP_KAM_PMR_LIST_PER_INSTANCE_SIZE 0x40
#define SECP_KAM_PMR_LIST_COUNT 8
#define SECP_KAM_PMR_ENTRY_SIZE 0x40
#define SECP_KAM_PMR_ENTRY_PER_INSTANCE_SIZE 0x4
#define SECP_KAM_PMR_ENTRY_COUNT 16
#define SECP_KAM_PMR_STATUS_SIZE 0x20
#define SECP_KAM_PMR_STATUS_PER_INSTANCE_SIZE 0x4
#define SECP_KAM_PMR_STATUS_COUNT 8
#define SECP_KAM_PMR_EXTEND_MEASUREMENT_SRC_SIZE 0x4

#define SECP_KAM_PMR_EXTEND_TARGET_SIZE 0x4

#define SECP_KAM_PMR_SHA_CONFIG_SIZE 0x4

#define SECP_KAM_PMR_SHA_INTR_SIZE 0x4

#define SECP_KAM_ECC_CTRL_PMR_SIZE 0x4

#define SECP_KAM_ECC_STATUS_PMR_SIZE 0x4

#define SECP_KAM_ECC_LOG_PMR_SIZE 0x4

#define SECP_KAM_ERR_STATUS_SIZE 0x4

#define SECP_KAM_INTR_STATE_SIZE 0x4

#define SECP_KAM_INTR_ENABLE_SIZE 0x4

#define SECP_KAM_INTR_TEST_SIZE 0x4

#define SECP_KAM_SCRATCH_SIZE 0x4


#define SECP_s_OFFSET 0x0
#define SECP_ROT_KAM_OFFSET 0x88000
#define SECP_KAM_OTP_OTPC_OFFSET 0x0

#define SECP_KAM_OTP_OTPC_CONTROL_OFFSET 0x0

#define SECP_KAM_OTP_OTPC_ADDRESS_OFFSET 0x4

#define SECP_KAM_OTP_OTPC_CONTROL0_OFFSET 0x8

#define SECP_KAM_OTP_OTPC_STATUS0_OFFSET 0xC

#define SECP_KAM_OTP_OTPC_STATUS1_OFFSET 0x10

#define SECP_KAM_OTP_OTPC_WRITE_OFFSET 0x40

#define SECP_KAM_OTP_OTPC_READ_OFFSET 0x80
#define SECP_KAM_OTP_EFC_OFFSET 0x100

#define SECP_KAM_OTP_EFC_CONTROL_OFFSET 0x0

#define SECP_KAM_OTP_EFC_BYPASS_CONTROL_OFFSET 0x4

#define SECP_KAM_OTP_EFC_STATUS_OFFSET 0x8

#define SECP_KAM_OTP_EFC_POWER_CONTROLS_OFFSET 0xC

#define SECP_KAM_OTP_EFC_ACCESS_TIMERS_OFFSET 0x10

#define SECP_KAM_OTP_EFC_ADDRESS_OFFSET 0x14

#define SECP_KAM_OTP_EFC_PGM_DATA_OFFSET 0x18

#define SECP_KAM_OTP_EFC_RD_DATA_OFFSET 0x1C
#define SECP_KAM_OTP_LANE_OFFSET 0x200

#define SECP_CONFIG_OFFSET 0x0

#define SECP_KAM_OTP_LANE_ACCESS_OFFSET 0x4

#define SECP_KAM_OTP_LANE_STATUS_OFFSET 0x8

#define SECP_KAM_OTP_HW_CONTROL_VALID_OFFSET 0x260

#define SECP_KAM_OTP_HW_CONTROL_OFFSET 0x264
#define SECP_KAM_KV_OFFSET 0x300

#define SECP_RANGE_OFFSET 0x0

#define SECP_KAM_KV_ACCESS_OFFSET 0x4

#define SECP_KAM_KV_STATUS_OFFSET 0x8
#define SECP_KAM_PMR_LIST_OFFSET 0x400

#define SECP_KAM_PMR_ENTRY_OFFSET 0x0

#define SECP_KAM_PMR_STATUS_OFFSET 0x600

#define SECP_KAM_PMR_EXTEND_MEASUREMENT_SRC_OFFSET 0x620

#define SECP_KAM_PMR_EXTEND_TARGET_OFFSET 0x624

#define SECP_KAM_PMR_SHA_CONFIG_OFFSET 0x628

#define SECP_KAM_PMR_SHA_INTR_OFFSET 0x62C

#define SECP_KAM_ECC_CTRL_PMR_OFFSET 0x630

#define SECP_KAM_ECC_STATUS_PMR_OFFSET 0x634

#define SECP_KAM_ECC_LOG_PMR_OFFSET 0x638

#define SECP_KAM_ERR_STATUS_OFFSET 0x63C

#define SECP_KAM_INTR_STATE_OFFSET 0x640

#define SECP_KAM_INTR_ENABLE_OFFSET 0x644

#define SECP_KAM_INTR_TEST_OFFSET 0x648

#define SECP_KAM_SCRATCH_OFFSET 0x64C

#define SECP_s_ADDRESS 0x00000
#define SECP_ROT_KAM_ADDRESS 0x88000
#define SECP_KAM_OTP_OTPC_ADDRESS 0x88000
#define SECP_KAM_OTP_OTPC_CONTROL_ADDRESS 0x88000
#define SECP_KAM_OTP_OTPC_ADDRESS_ADDRESS 0x88004
#define SECP_KAM_OTP_OTPC_CONTROL0_ADDRESS 0x88008
#define SECP_KAM_OTP_OTPC_STATUS0_ADDRESS 0x8800C
#define SECP_KAM_OTP_OTPC_STATUS1_ADDRESS 0x88010
#define SECP_KAM_OTP_OTPC_WRITE_ADDRESS 0x88040
#define SECP_KAM_OTP_OTPC_READ_ADDRESS 0x88080
#define SECP_KAM_OTP_EFC_ADDRESS 0x88100
#define SECP_KAM_OTP_EFC_CONTROL_ADDRESS 0x88100
#define SECP_KAM_OTP_EFC_BYPASS_CONTROL_ADDRESS 0x88104
#define SECP_KAM_OTP_EFC_STATUS_ADDRESS 0x88108
#define SECP_KAM_OTP_EFC_POWER_CONTROLS_ADDRESS 0x8810C
#define SECP_KAM_OTP_EFC_ACCESS_TIMERS_ADDRESS 0x88110
#define SECP_KAM_OTP_EFC_ADDRESS_ADDRESS 0x88114
#define SECP_KAM_OTP_EFC_PGM_DATA_ADDRESS 0x88118
#define SECP_KAM_OTP_EFC_RD_DATA_ADDRESS 0x8811C
#define SECP_KAM_OTP_LANE_ADDRESS 0x88200
#define SECP_CONFIG_ADDRESS 0x88200
#define SECP_KAM_OTP_LANE_ACCESS_ADDRESS 0x88204
#define SECP_KAM_OTP_LANE_STATUS_ADDRESS 0x88208
#define SECP_KAM_OTP_HW_CONTROL_VALID_ADDRESS 0x88260
#define SECP_KAM_OTP_HW_CONTROL_ADDRESS 0x88264
#define SECP_KAM_KV_ADDRESS 0x88300
#define SECP_RANGE_ADDRESS 0x88300
#define SECP_KAM_KV_ACCESS_ADDRESS 0x88304
#define SECP_KAM_KV_STATUS_ADDRESS 0x88308
#define SECP_KAM_PMR_LIST_ADDRESS 0x88400
#define SECP_KAM_PMR_ENTRY_ADDRESS 0x88400
#define SECP_KAM_PMR_STATUS_ADDRESS 0x88600
#define SECP_KAM_PMR_EXTEND_MEASUREMENT_SRC_ADDRESS 0x88620
#define SECP_KAM_PMR_EXTEND_TARGET_ADDRESS 0x88624
#define SECP_KAM_PMR_SHA_CONFIG_ADDRESS 0x88628
#define SECP_KAM_PMR_SHA_INTR_ADDRESS 0x8862C
#define SECP_KAM_ECC_CTRL_PMR_ADDRESS 0x88630
#define SECP_KAM_ECC_STATUS_PMR_ADDRESS 0x88634
#define SECP_KAM_ECC_LOG_PMR_ADDRESS 0x88638
#define SECP_KAM_ERR_STATUS_ADDRESS 0x8863C
#define SECP_KAM_INTR_STATE_ADDRESS 0x88640
#define SECP_KAM_INTR_ENABLE_ADDRESS 0x88644
#define SECP_KAM_INTR_TEST_ADDRESS 0x88648
#define SECP_KAM_SCRATCH_ADDRESS 0x8864C
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_CONTROL_OTP_SOFT_RST_OFFSET 1  /* OTP_SOFT_RST DESCRIPTION :When this bit is set, internal state machines are reset. Will be used in the situation of OTP being locked up. This also goes to OTP controller. This doesn't reset the Registers  */
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_CONTROL_OTP_SOFT_RST_MASK 0x2
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_CONTROL_OTP_SOFT_RST_INV_MASK 0xFFFFFFFD
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_CONTROL_OTP_SOFT_RST_VALUE_MASK 0x1
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_CONTROL_OTP_SOFT_RST_INV_VALUE_MASK 0xFFFFFFFE
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_CONTROL_OTP_SOFT_RST_SIZE 1
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_CONTROL_OTP_SOFT_RST_DEFAULT 0
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_CONTROL_OTP_SOFT_RST 0x2  /* OTP_SOFT_RST DESCRIPTION :When this bit is set, internal state machines are reset. Will be used in the situation of OTP being locked up. This also goes to OTP controller. This doesn't reset the Registers */
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_CONTROL_OTP_CPU_MODE_EN_OFFSET 0  /* OTP_CPU_MODE_EN DESCRIPTION :Write a 1 to this to be able to access OTP through the APB interface. If this is 0, OTP is only accessable through JTAG (by default)  */
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_CONTROL_OTP_CPU_MODE_EN_MASK 0x1
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_CONTROL_OTP_CPU_MODE_EN_INV_MASK 0xFFFFFFFE
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_CONTROL_OTP_CPU_MODE_EN_VALUE_MASK 0x0
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_CONTROL_OTP_CPU_MODE_EN_INV_VALUE_MASK 0xFFFFFFFF
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_CONTROL_OTP_CPU_MODE_EN_SIZE 1
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_CONTROL_OTP_CPU_MODE_EN_DEFAULT 0
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_CONTROL_OTP_CPU_MODE_EN 0x1  /* OTP_CPU_MODE_EN DESCRIPTION :Write a 1 to this to be able to access OTP through the APB interface. If this is 0, OTP is only accessable through JTAG (by default) */
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_ADDRESS_OTP_ADDR_OFFSET 0  /* OTP_ADDR DESCRIPTION :The program address input bus is used to select a word out of OTP array. There are 68 rows. A value greater than 67 could yield unexpected results  */
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_ADDRESS_OTP_ADDR_MASK 0x7F
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_ADDRESS_OTP_ADDR_INV_MASK 0xFFFFFF80
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_ADDRESS_OTP_ADDR_VALUE_MASK 0x3F
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_ADDRESS_OTP_ADDR_INV_VALUE_MASK 0xFFFFFFC0
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_ADDRESS_OTP_ADDR_SIZE 7
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_ADDRESS_OTP_ADDR_DEFAULT 0
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_CONTROL0_OTP_CMD_OFFSET 1  /* OTP_CMD DESCRIPTION :This field specifies the OTP command  */
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_CONTROL0_OTP_CMD_MASK 0x3E
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_CONTROL0_OTP_CMD_INV_MASK 0xFFFFFFC1
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_CONTROL0_OTP_CMD_VALUE_MASK 0x1F
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_CONTROL0_OTP_CMD_INV_VALUE_MASK 0xFFFFFFE0
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_CONTROL0_OTP_CMD_SIZE 5
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_CONTROL0_OTP_CMD_DEFAULT 0
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_CONTROL0_START_OFFSET 0  /* START DESCRIPTION :Start bit to tell OTP controller to send command to OTP controller. APB should set this bit after it has set OTP_CMD and other registers. This bit is self clearing.  */
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_CONTROL0_START_MASK 0x1
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_CONTROL0_START_INV_MASK 0xFFFFFFFE
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_CONTROL0_START_VALUE_MASK 0x0
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_CONTROL0_START_INV_VALUE_MASK 0xFFFFFFFF
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_CONTROL0_START_SIZE 1
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_CONTROL0_START_DEFAULT 0
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_CONTROL0_START 0x1  /* START DESCRIPTION :Start bit to tell OTP controller to send command to OTP controller. APB should set this bit after it has set OTP_CMD and other registers. This bit is self clearing. */
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_ECC_DED_FLAG_STATUS_OFFSET 23  /* ECC_DED_FLAG_STATUS DESCRIPTION :DED flag status. This bit is set when ECC with DED is enabled and double error is detected.  */
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_ECC_DED_FLAG_STATUS_MASK 0x800000
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_ECC_DED_FLAG_STATUS_INV_MASK 0xFF7FFFFF
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_ECC_DED_FLAG_STATUS_VALUE_MASK 0x400000
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_ECC_DED_FLAG_STATUS_INV_VALUE_MASK 0xFFBFFFFF
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_ECC_DED_FLAG_STATUS_SIZE 1
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_ECC_DED_FLAG_STATUS_DEFAULT 0
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_ECC_DED_FLAG_STATUS 0x800000  /* ECC_DED_FLAG_STATUS DESCRIPTION :DED flag status. This bit is set when ECC with DED is enabled and double error is detected. */
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_ECC_SEC_FLAG_STATUS_OFFSET 22  /* ECC_SEC_FLAG_STATUS DESCRIPTION :SEC flag status. This bit is set when ECC with SEC is enabled and double error is detected.  */
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_ECC_SEC_FLAG_STATUS_MASK 0x400000
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_ECC_SEC_FLAG_STATUS_INV_MASK 0xFFBFFFFF
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_ECC_SEC_FLAG_STATUS_VALUE_MASK 0x200000
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_ECC_SEC_FLAG_STATUS_INV_VALUE_MASK 0xFFDFFFFF
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_ECC_SEC_FLAG_STATUS_SIZE 1
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_ECC_SEC_FLAG_STATUS_DEFAULT 0
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_ECC_SEC_FLAG_STATUS 0x400000  /* ECC_SEC_FLAG_STATUS DESCRIPTION :SEC flag status. This bit is set when ECC with SEC is enabled and double error is detected. */
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_ECC_CORRECTION_STATUS_OFFSET 21  /* ECC_CORRECTION_STATUS DESCRIPTION :ECC correction status. This bit is valid when ECC is enabled and indicates whether the ECC correction is enabled.  */
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_ECC_CORRECTION_STATUS_MASK 0x200000
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_ECC_CORRECTION_STATUS_INV_MASK 0xFFDFFFFF
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_ECC_CORRECTION_STATUS_VALUE_MASK 0x100000
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_ECC_CORRECTION_STATUS_INV_VALUE_MASK 0xFFEFFFFF
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_ECC_CORRECTION_STATUS_SIZE 1
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_ECC_CORRECTION_STATUS_DEFAULT 0
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_ECC_CORRECTION_STATUS 0x200000  /* ECC_CORRECTION_STATUS DESCRIPTION :ECC correction status. This bit is valid when ECC is enabled and indicates whether the ECC correction is enabled. */
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_PRESCREEN_FAIL_OFFSET 20  /* PRESCREEN_FAIL DESCRIPTION :Prescreen fail. This bit is set during PRESCREEN command for any failure  */
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_PRESCREEN_FAIL_MASK 0x100000
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_PRESCREEN_FAIL_INV_MASK 0xFFEFFFFF
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_PRESCREEN_FAIL_VALUE_MASK 0x80000
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_PRESCREEN_FAIL_INV_VALUE_MASK 0xFFF7FFFF
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_PRESCREEN_FAIL_SIZE 1
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_PRESCREEN_FAIL_DEFAULT 0
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_PRESCREEN_FAIL 0x100000  /* PRESCREEN_FAIL DESCRIPTION :Prescreen fail. This bit is set during PRESCREEN command for any failure */
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_ADDR_IN_ILLEGAL_RANGE_OFFSET 19  /* ADDR_IN_ILLEGAL_RANGE DESCRIPTION :Applicable for AUTOREPAIR Feature  */
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_ADDR_IN_ILLEGAL_RANGE_MASK 0x80000
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_ADDR_IN_ILLEGAL_RANGE_INV_MASK 0xFFF7FFFF
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_ADDR_IN_ILLEGAL_RANGE_VALUE_MASK 0x40000
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_ADDR_IN_ILLEGAL_RANGE_INV_VALUE_MASK 0xFFFBFFFF
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_ADDR_IN_ILLEGAL_RANGE_SIZE 1
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_ADDR_IN_ILLEGAL_RANGE_DEFAULT 0
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_ADDR_IN_ILLEGAL_RANGE 0x80000  /* ADDR_IN_ILLEGAL_RANGE DESCRIPTION :Applicable for AUTOREPAIR Feature */
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_MAX_SW_OFFSET 18  /* MAX_SW DESCRIPTION :Applicable for AUTOREPAIR Feature  */
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_MAX_SW_MASK 0x40000
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_MAX_SW_INV_MASK 0xFFFBFFFF
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_MAX_SW_VALUE_MASK 0x20000
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_MAX_SW_INV_VALUE_MASK 0xFFFDFFFF
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_MAX_SW_SIZE 1
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_MAX_SW_DEFAULT 0
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_MAX_SW 0x40000  /* MAX_SW DESCRIPTION :Applicable for AUTOREPAIR Feature */
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_AUTO_RW_MAX_SET_OFFSET 17  /* AUTO_RW_MAX_SET DESCRIPTION :Applicable for AUTOREPAIR Feature  */
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_AUTO_RW_MAX_SET_MASK 0x20000
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_AUTO_RW_MAX_SET_INV_MASK 0xFFFDFFFF
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_AUTO_RW_MAX_SET_VALUE_MASK 0x10000
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_AUTO_RW_MAX_SET_INV_VALUE_MASK 0xFFFEFFFF
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_AUTO_RW_MAX_SET_SIZE 1
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_AUTO_RW_MAX_SET_DEFAULT 0
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_AUTO_RW_MAX_SET 0x20000  /* AUTO_RW_MAX_SET DESCRIPTION :Applicable for AUTOREPAIR Feature */
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_MAX_RWP_OFFSET 16  /* MAX_RWP DESCRIPTION :Applicable for AUTOREPAIR Feature  */
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_MAX_RWP_MASK 0x10000
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_MAX_RWP_INV_MASK 0xFFFEFFFF
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_MAX_RWP_VALUE_MASK 0x8000
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_MAX_RWP_INV_VALUE_MASK 0xFFFF7FFF
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_MAX_RWP_SIZE 1
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_MAX_RWP_DEFAULT 0
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_MAX_RWP 0x10000  /* MAX_RWP DESCRIPTION :Applicable for AUTOREPAIR Feature */
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_MAX_RW_OFFSET 15  /* MAX_RW DESCRIPTION :Applicable for AUTOREPAIR Feature  */
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_MAX_RW_MASK 0x8000
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_MAX_RW_INV_MASK 0xFFFF7FFF
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_MAX_RW_VALUE_MASK 0x4000
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_MAX_RW_INV_VALUE_MASK 0xFFFFBFFF
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_MAX_RW_SIZE 1
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_MAX_RW_DEFAULT 0
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_MAX_RW 0x8000  /* MAX_RW DESCRIPTION :Applicable for AUTOREPAIR Feature */
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_PRGM_WD_RP_FAIL_OFFSET 14  /* PRGM_WD_RP_FAIL DESCRIPTION :Applicable for AUTOREPAIR Feature  */
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_PRGM_WD_RP_FAIL_MASK 0x4000
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_PRGM_WD_RP_FAIL_INV_MASK 0xFFFFBFFF
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_PRGM_WD_RP_FAIL_VALUE_MASK 0x2000
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_PRGM_WD_RP_FAIL_INV_VALUE_MASK 0xFFFFDFFF
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_PRGM_WD_RP_FAIL_SIZE 1
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_PRGM_WD_RP_FAIL_DEFAULT 0
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_PRGM_WD_RP_FAIL 0x4000  /* PRGM_WD_RP_FAIL DESCRIPTION :Applicable for AUTOREPAIR Feature */
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_PROG_EN_OFFSET 13  /* PROG_EN DESCRIPTION :PROG enable bit. By default this is set to enable PROG command.  */
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_PROG_EN_MASK 0x2000
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_PROG_EN_INV_MASK 0xFFFFDFFF
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_PROG_EN_VALUE_MASK 0x1000
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_PROG_EN_INV_VALUE_MASK 0xFFFFEFFF
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_PROG_EN_SIZE 1
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_PROG_EN_DEFAULT 1
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_PROG_EN 0x2000  /* PROG_EN DESCRIPTION :PROG enable bit. By default this is set to enable PROG command. */
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_PROG_BLOCK_CMD_OFFSET 12  /* PROG_BLOCK_CMD DESCRIPTION :Blocked PROG related commands for Secure space. Prog command blocked for secure space. Only PROG_LOCK can be used to program.  */
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_PROG_BLOCK_CMD_MASK 0x1000
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_PROG_BLOCK_CMD_INV_MASK 0xFFFFEFFF
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_PROG_BLOCK_CMD_VALUE_MASK 0x800
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_PROG_BLOCK_CMD_INV_VALUE_MASK 0xFFFFF7FF
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_PROG_BLOCK_CMD_SIZE 1
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_PROG_BLOCK_CMD_DEFAULT 0
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_PROG_BLOCK_CMD 0x1000  /* PROG_BLOCK_CMD DESCRIPTION :Blocked PROG related commands for Secure space. Prog command blocked for secure space. Only PROG_LOCK can be used to program. */
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_PROG_SCREEN_FAIL_OFFSET 11  /* PROG_SCREEN_FAIL DESCRIPTION :Program screen failure. This bit is set when screening fails for word programming.  */
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_PROG_SCREEN_FAIL_MASK 0x800
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_PROG_SCREEN_FAIL_INV_MASK 0xFFFFF7FF
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_PROG_SCREEN_FAIL_VALUE_MASK 0x400
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_PROG_SCREEN_FAIL_INV_VALUE_MASK 0xFFFFFBFF
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_PROG_SCREEN_FAIL_SIZE 1
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_PROG_SCREEN_FAIL_DEFAULT 0
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_PROG_SCREEN_FAIL 0x800  /* PROG_SCREEN_FAIL DESCRIPTION :Program screen failure. This bit is set when screening fails for word programming. */
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_PROG_WORD_FAIL_OFFSET 10  /* PROG_WORD_FAIL DESCRIPTION :Program word failure. This bit is set when Programming fails for a bit during word Program. This bit is set if PROGRAM command is issued when PROGOK is not enabled  */
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_PROG_WORD_FAIL_MASK 0x400
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_PROG_WORD_FAIL_INV_MASK 0xFFFFFBFF
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_PROG_WORD_FAIL_VALUE_MASK 0x200
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_PROG_WORD_FAIL_INV_VALUE_MASK 0xFFFFFDFF
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_PROG_WORD_FAIL_SIZE 1
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_PROG_WORD_FAIL_DEFAULT 0
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_PROG_WORD_FAIL 0x400  /* PROG_WORD_FAIL DESCRIPTION :Program word failure. This bit is set when Programming fails for a bit during word Program. This bit is set if PROGRAM command is issued when PROGOK is not enabled */
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_INVALID_ADDR_OFFSET 9  /* INVALID_ADDR DESCRIPTION :Invalid address entered. This bit is set when Locked address is accessed by program related commands or when address is out of range.  */
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_INVALID_ADDR_MASK 0x200
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_INVALID_ADDR_INV_MASK 0xFFFFFDFF
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_INVALID_ADDR_VALUE_MASK 0x100
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_INVALID_ADDR_INV_VALUE_MASK 0xFFFFFEFF
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_INVALID_ADDR_SIZE 1
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_INVALID_ADDR_DEFAULT 0
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_INVALID_ADDR 0x200  /* INVALID_ADDR DESCRIPTION :Invalid address entered. This bit is set when Locked address is accessed by program related commands or when address is out of range. */
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_DEBUG_ENABLE_OFFSET 8  /* DEBUG_ENABLE DESCRIPTION :Debug mode register. This bit is set using ctrl_wr command and indicates the debug mode option. Debug mode provides the direct interaction with OTP memory. Note: When TIECELL UNLOCK DISABLE bit is blown, this bit is not applicable.  */
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_DEBUG_ENABLE_MASK 0x100
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_DEBUG_ENABLE_INV_MASK 0xFFFFFEFF
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_DEBUG_ENABLE_VALUE_MASK 0x80
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_DEBUG_ENABLE_INV_VALUE_MASK 0xFFFFFF7F
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_DEBUG_ENABLE_SIZE 1
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_DEBUG_ENABLE_DEFAULT 0
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_DEBUG_ENABLE 0x100  /* DEBUG_ENABLE DESCRIPTION :Debug mode register. This bit is set using ctrl_wr command and indicates the debug mode option. Debug mode provides the direct interaction with OTP memory. Note: When TIECELL UNLOCK DISABLE bit is blown, this bit is not applicable. */
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_MST_FSM_ERROR_OFFSET 7  /* MST_FSM_ERROR DESCRIPTION :An illegal state has executed. This bit is set to '0' in idle state, otherwise '1' in all other states. Note: This bit indicates whether if state machine is stuck during command execution  */
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_MST_FSM_ERROR_MASK 0x80
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_MST_FSM_ERROR_INV_MASK 0xFFFFFF7F
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_MST_FSM_ERROR_VALUE_MASK 0x40
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_MST_FSM_ERROR_INV_VALUE_MASK 0xFFFFFFBF
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_MST_FSM_ERROR_SIZE 1
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_MST_FSM_ERROR_DEFAULT 0
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_MST_FSM_ERROR 0x80  /* MST_FSM_ERROR DESCRIPTION :An illegal state has executed. This bit is set to '0' in idle state, otherwise '1' in all other states. Note: This bit indicates whether if state machine is stuck during command execution */
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_DEBUG_MODE_SET_OFFSET 6  /* DEBUG_MODE_SET DESCRIPTION :This bit is set when ctrl_wr_cmd is issued. (N/A for APB)  */
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_DEBUG_MODE_SET_MASK 0x40
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_DEBUG_MODE_SET_INV_MASK 0xFFFFFFBF
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_DEBUG_MODE_SET_VALUE_MASK 0x20
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_DEBUG_MODE_SET_INV_VALUE_MASK 0xFFFFFFDF
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_DEBUG_MODE_SET_SIZE 1
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_DEBUG_MODE_SET_DEFAULT 0
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_DEBUG_MODE_SET 0x40  /* DEBUG_MODE_SET DESCRIPTION :This bit is set when ctrl_wr_cmd is issued. (N/A for APB) */
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_REFOK_OFFSET 5  /* REFOK DESCRIPTION :OTP RefOK signal  */
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_REFOK_MASK 0x20
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_REFOK_INV_MASK 0xFFFFFFDF
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_REFOK_VALUE_MASK 0x10
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_REFOK_INV_VALUE_MASK 0xFFFFFFEF
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_REFOK_SIZE 1
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_REFOK_DEFAULT 0
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_REFOK 0x20  /* REFOK DESCRIPTION :OTP RefOK signal */
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_CMD_FAIL_OFFSET 4  /* CMD_FAIL DESCRIPTION :Command Failure. 1) This bit is set when Locked address is accessed using program related commands: a) PROG command access lock rows ('d11 and '12). b) PROG_LOCK command access addresses which are not defined under LOCK addresses. 2) This bit is also set when READ_TEST command is executed with incorrect parameters. (N/A for APB)  */
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_CMD_FAIL_MASK 0x10
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_CMD_FAIL_INV_MASK 0xFFFFFFEF
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_CMD_FAIL_VALUE_MASK 0x8
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_CMD_FAIL_INV_VALUE_MASK 0xFFFFFFF7
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_CMD_FAIL_SIZE 1
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_CMD_FAIL_DEFAULT 0
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_CMD_FAIL 0x10  /* CMD_FAIL DESCRIPTION :Command Failure. 1) This bit is set when Locked address is accessed using program related commands: a) PROG command access lock rows ('d11 and '12). b) PROG_LOCK command access addresses which are not defined under LOCK addresses. 2) This bit is also set when READ_TEST command is executed with incorrect parameters. (N/A for APB) */
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_FDONE_OFFSET 3  /* FDONE DESCRIPTION :FDone. (Same as VENDOR_READY) This signal is set when fout bits (VENDOR_BITS) are loaded if autoload is enabled.  */
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_FDONE_MASK 0x8
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_FDONE_INV_MASK 0xFFFFFFF7
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_FDONE_VALUE_MASK 0x4
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_FDONE_INV_VALUE_MASK 0xFFFFFFFB
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_FDONE_SIZE 1
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_FDONE_DEFAULT 1
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_FDONE 0x8  /* FDONE DESCRIPTION :FDone. (Same as VENDOR_READY) This signal is set when fout bits (VENDOR_BITS) are loaded if autoload is enabled. */
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_PROGOK_OFFSET 2  /* PROGOK DESCRIPTION :OTP ProgOK signal. This signal is set when PROG ENABLE sequence is issued correctly  */
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_PROGOK_MASK 0x4
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_PROGOK_INV_MASK 0xFFFFFFFB
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_PROGOK_VALUE_MASK 0x2
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_PROGOK_INV_VALUE_MASK 0xFFFFFFFD
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_PROGOK_SIZE 1
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_PROGOK_DEFAULT 0
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_PROGOK 0x4  /* PROGOK DESCRIPTION :OTP ProgOK signal. This signal is set when PROG ENABLE sequence is issued correctly */
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_CMD_DONE_OFFSET 1  /* CMD_DONE DESCRIPTION :Command Done. This signal indicates the completion of the command  */
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_CMD_DONE_MASK 0x2
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_CMD_DONE_INV_MASK 0xFFFFFFFD
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_CMD_DONE_VALUE_MASK 0x1
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_CMD_DONE_INV_VALUE_MASK 0xFFFFFFFE
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_CMD_DONE_SIZE 1
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_CMD_DONE_DEFAULT 1
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_CMD_DONE 0x2  /* CMD_DONE DESCRIPTION :Command Done. This signal indicates the completion of the command */
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_DATA_VALID_OFFSET 0  /* DATA_VALID DESCRIPTION :Data Valid. Not Applicable for APB. Note: For single READ, use cmd_done for valid data  */
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_DATA_VALID_MASK 0x1
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_DATA_VALID_INV_MASK 0xFFFFFFFE
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_DATA_VALID_VALUE_MASK 0x0
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_DATA_VALID_INV_VALUE_MASK 0xFFFFFFFF
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_DATA_VALID_SIZE 1
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_DATA_VALID_DEFAULT 0
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS0_DATA_VALID 0x1  /* DATA_VALID DESCRIPTION :Data Valid. Not Applicable for APB. Note: For single READ, use cmd_done for valid data */
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS1_COMMAND_DONE_OFFSET 0  /* COMMAND_DONE DESCRIPTION :This bit is set when the state machine has returned to IDLE. Hardware sets it to one when the command completes. Write 1 to clear. APB should clear this bit before sending a new command.  */
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS1_COMMAND_DONE_MASK 0x1
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS1_COMMAND_DONE_INV_MASK 0xFFFFFFFE
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS1_COMMAND_DONE_VALUE_MASK 0x0
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS1_COMMAND_DONE_INV_VALUE_MASK 0xFFFFFFFF
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS1_COMMAND_DONE_SIZE 1
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS1_COMMAND_DONE_DEFAULT 0
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_STATUS1_COMMAND_DONE 0x1  /* COMMAND_DONE DESCRIPTION :This bit is set when the state machine has returned to IDLE. Hardware sets it to one when the command completes. Write 1 to clear. APB should clear this bit before sending a new command. */
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_WRITE_DATA_OFFSET 0  /* DATA DESCRIPTION :Bits [31:0] of data to be written/programmed into OTP.  */
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_WRITE_DATA_MASK 0xFFFFFFFF
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_WRITE_DATA_INV_MASK 0x0
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_WRITE_DATA_VALUE_MASK 0x7FFFFFFF
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_WRITE_DATA_INV_VALUE_MASK 0x80000000
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_WRITE_DATA_SIZE 32
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_WRITE_DATA_DEFAULT 0
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_READ_DATA_OFFSET 0  /* DATA DESCRIPTION :Bit [31:0] read data returned from command.  */
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_READ_DATA_MASK 0xFFFFFFFF
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_READ_DATA_INV_MASK 0x0
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_READ_DATA_VALUE_MASK 0x7FFFFFFF
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_READ_DATA_INV_VALUE_MASK 0x80000000
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_READ_DATA_SIZE 32
#define SECP_KAM_OTP_OTPC_KAM_OTP_OTPC_READ_DATA_DEFAULT 0
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_CONTROL_MR_OFFSET 6
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_CONTROL_MR_MASK 0x40
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_CONTROL_MR_INV_MASK 0xFFFFFFBF
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_CONTROL_MR_VALUE_MASK 0x20
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_CONTROL_MR_INV_VALUE_MASK 0xFFFFFFDF
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_CONTROL_MR_SIZE 1
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_CONTROL_MR_DEFAULT 0
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_CONTROL_MR 0x40
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_CONTROL_SWR_OFFSET 5
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_CONTROL_SWR_MASK 0x20
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_CONTROL_SWR_INV_MASK 0xFFFFFFDF
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_CONTROL_SWR_VALUE_MASK 0x10
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_CONTROL_SWR_INV_VALUE_MASK 0xFFFFFFEF
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_CONTROL_SWR_SIZE 1
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_CONTROL_SWR_DEFAULT 0
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_CONTROL_SWR 0x20
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_CONTROL_IRQ_MODE_OFFSET 4
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_CONTROL_IRQ_MODE_MASK 0x10
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_CONTROL_IRQ_MODE_INV_MASK 0xFFFFFFEF
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_CONTROL_IRQ_MODE_VALUE_MASK 0x8
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_CONTROL_IRQ_MODE_INV_VALUE_MASK 0xFFFFFFF7
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_CONTROL_IRQ_MODE_SIZE 1
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_CONTROL_IRQ_MODE_DEFAULT 0
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_CONTROL_IRQ_MODE 0x10
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_CONTROL_IRQ_EN_OFFSET 3
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_CONTROL_IRQ_EN_MASK 0x8
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_CONTROL_IRQ_EN_INV_MASK 0xFFFFFFF7
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_CONTROL_IRQ_EN_VALUE_MASK 0x4
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_CONTROL_IRQ_EN_INV_VALUE_MASK 0xFFFFFFFB
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_CONTROL_IRQ_EN_SIZE 1
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_CONTROL_IRQ_EN_DEFAULT 0
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_CONTROL_IRQ_EN 0x8
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_CONTROL_BYPASS_MODE_OFFSET 2
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_CONTROL_BYPASS_MODE_MASK 0x4
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_CONTROL_BYPASS_MODE_INV_MASK 0xFFFFFFFB
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_CONTROL_BYPASS_MODE_VALUE_MASK 0x2
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_CONTROL_BYPASS_MODE_INV_VALUE_MASK 0xFFFFFFFD
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_CONTROL_BYPASS_MODE_SIZE 1
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_CONTROL_BYPASS_MODE_DEFAULT 0
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_CONTROL_BYPASS_MODE 0x4
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_CONTROL_START_RD_OFFSET 1
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_CONTROL_START_RD_MASK 0x2
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_CONTROL_START_RD_INV_MASK 0xFFFFFFFD
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_CONTROL_START_RD_VALUE_MASK 0x1
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_CONTROL_START_RD_INV_VALUE_MASK 0xFFFFFFFE
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_CONTROL_START_RD_SIZE 1
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_CONTROL_START_RD_DEFAULT 0
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_CONTROL_START_RD 0x2
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_CONTROL_START_PGM_OFFSET 0
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_CONTROL_START_PGM_MASK 0x1
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_CONTROL_START_PGM_INV_MASK 0xFFFFFFFE
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_CONTROL_START_PGM_VALUE_MASK 0x0
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_CONTROL_START_PGM_INV_VALUE_MASK 0xFFFFFFFF
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_CONTROL_START_PGM_SIZE 1
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_CONTROL_START_PGM_DEFAULT 0
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_CONTROL_START_PGM 0x1
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_BYPASS_CONTROL_PGEN_OFFSET 19
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_BYPASS_CONTROL_PGEN_MASK 0x80000
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_BYPASS_CONTROL_PGEN_INV_MASK 0xFFF7FFFF
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_BYPASS_CONTROL_PGEN_VALUE_MASK 0x40000
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_BYPASS_CONTROL_PGEN_INV_VALUE_MASK 0xFFFBFFFF
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_BYPASS_CONTROL_PGEN_SIZE 1
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_BYPASS_CONTROL_PGEN_DEFAULT 0
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_BYPASS_CONTROL_PGEN 0x80000
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_BYPASS_CONTROL_LOAD_OFFSET 18
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_BYPASS_CONTROL_LOAD_MASK 0x40000
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_BYPASS_CONTROL_LOAD_INV_MASK 0xFFFBFFFF
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_BYPASS_CONTROL_LOAD_VALUE_MASK 0x20000
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_BYPASS_CONTROL_LOAD_INV_VALUE_MASK 0xFFFDFFFF
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_BYPASS_CONTROL_LOAD_SIZE 1
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_BYPASS_CONTROL_LOAD_DEFAULT 1
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_BYPASS_CONTROL_LOAD 0x40000
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_BYPASS_CONTROL_STB_OFFSET 17
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_BYPASS_CONTROL_STB_MASK 0x20000
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_BYPASS_CONTROL_STB_INV_MASK 0xFFFDFFFF
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_BYPASS_CONTROL_STB_VALUE_MASK 0x10000
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_BYPASS_CONTROL_STB_INV_VALUE_MASK 0xFFFEFFFF
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_BYPASS_CONTROL_STB_SIZE 1
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_BYPASS_CONTROL_STB_DEFAULT 0
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_BYPASS_CONTROL_STB 0x20000
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_BYPASS_CONTROL_CSB_OFFSET 16
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_BYPASS_CONTROL_CSB_MASK 0x10000
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_BYPASS_CONTROL_CSB_INV_MASK 0xFFFEFFFF
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_BYPASS_CONTROL_CSB_VALUE_MASK 0x8000
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_BYPASS_CONTROL_CSB_INV_VALUE_MASK 0xFFFF7FFF
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_BYPASS_CONTROL_CSB_SIZE 1
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_BYPASS_CONTROL_CSB_DEFAULT 1
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_BYPASS_CONTROL_CSB 0x10000
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_BYPASS_CONTROL_ADDRESS_OFFSET 0
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_BYPASS_CONTROL_ADDRESS_MASK 0xFFFF
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_BYPASS_CONTROL_ADDRESS_INV_MASK 0xFFFF0000
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_BYPASS_CONTROL_ADDRESS_VALUE_MASK 0x7FFF
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_BYPASS_CONTROL_ADDRESS_INV_VALUE_MASK 0xFFFF8000
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_BYPASS_CONTROL_ADDRESS_SIZE 16
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_BYPASS_CONTROL_ADDRESS_DEFAULT 0
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_STATUS_CALCULATED_CRC_DATA_OFFSET 16
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_STATUS_CALCULATED_CRC_DATA_MASK 0xFF0000
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_STATUS_CALCULATED_CRC_DATA_INV_MASK 0xFF00FFFF
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_STATUS_CALCULATED_CRC_DATA_VALUE_MASK 0x7F8000
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_STATUS_CALCULATED_CRC_DATA_INV_VALUE_MASK 0xFF807FFF
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_STATUS_CALCULATED_CRC_DATA_SIZE 8
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_STATUS_CALCULATED_CRC_DATA_DEFAULT 0
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_STATUS_CRC_MATCH_OFFSET 8
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_STATUS_CRC_MATCH_MASK 0x100
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_STATUS_CRC_MATCH_INV_MASK 0xFFFFFEFF
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_STATUS_CRC_MATCH_VALUE_MASK 0x80
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_STATUS_CRC_MATCH_INV_VALUE_MASK 0xFFFFFF7F
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_STATUS_CRC_MATCH_SIZE 1
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_STATUS_CRC_MATCH_DEFAULT 0
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_STATUS_CRC_MATCH 0x100
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_STATUS_IRQ_ST_RD_DONE_OFFSET 4
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_STATUS_IRQ_ST_RD_DONE_MASK 0x10
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_STATUS_IRQ_ST_RD_DONE_INV_MASK 0xFFFFFFEF
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_STATUS_IRQ_ST_RD_DONE_VALUE_MASK 0x8
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_STATUS_IRQ_ST_RD_DONE_INV_VALUE_MASK 0xFFFFFFF7
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_STATUS_IRQ_ST_RD_DONE_SIZE 1
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_STATUS_IRQ_ST_RD_DONE_DEFAULT 0
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_STATUS_IRQ_ST_RD_DONE 0x10
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_STATUS_IRQ_ST_PGM_DONE_OFFSET 3
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_STATUS_IRQ_ST_PGM_DONE_MASK 0x8
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_STATUS_IRQ_ST_PGM_DONE_INV_MASK 0xFFFFFFF7
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_STATUS_IRQ_ST_PGM_DONE_VALUE_MASK 0x4
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_STATUS_IRQ_ST_PGM_DONE_INV_VALUE_MASK 0xFFFFFFFB
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_STATUS_IRQ_ST_PGM_DONE_SIZE 1
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_STATUS_IRQ_ST_PGM_DONE_DEFAULT 0
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_STATUS_IRQ_ST_PGM_DONE 0x8
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_STATUS_RD_FSM_BUSY_OFFSET 2
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_STATUS_RD_FSM_BUSY_MASK 0x4
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_STATUS_RD_FSM_BUSY_INV_MASK 0xFFFFFFFB
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_STATUS_RD_FSM_BUSY_VALUE_MASK 0x2
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_STATUS_RD_FSM_BUSY_INV_VALUE_MASK 0xFFFFFFFD
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_STATUS_RD_FSM_BUSY_SIZE 1
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_STATUS_RD_FSM_BUSY_DEFAULT 0
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_STATUS_RD_FSM_BUSY 0x4
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_STATUS_PGM_FSM_BUSY_OFFSET 1
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_STATUS_PGM_FSM_BUSY_MASK 0x2
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_STATUS_PGM_FSM_BUSY_INV_MASK 0xFFFFFFFD
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_STATUS_PGM_FSM_BUSY_VALUE_MASK 0x1
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_STATUS_PGM_FSM_BUSY_INV_VALUE_MASK 0xFFFFFFFE
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_STATUS_PGM_FSM_BUSY_SIZE 1
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_STATUS_PGM_FSM_BUSY_DEFAULT 0
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_STATUS_PGM_FSM_BUSY 0x2
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_STATUS_FSM_BUSY_OFFSET 0
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_STATUS_FSM_BUSY_MASK 0x1
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_STATUS_FSM_BUSY_INV_MASK 0xFFFFFFFE
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_STATUS_FSM_BUSY_VALUE_MASK 0x0
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_STATUS_FSM_BUSY_INV_VALUE_MASK 0xFFFFFFFF
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_STATUS_FSM_BUSY_SIZE 1
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_STATUS_FSM_BUSY_DEFAULT 0
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_STATUS_FSM_BUSY 0x1
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_POWER_CONTROLS_PD_OFFSET 1
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_POWER_CONTROLS_PD_MASK 0x2
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_POWER_CONTROLS_PD_INV_MASK 0xFFFFFFFD
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_POWER_CONTROLS_PD_VALUE_MASK 0x1
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_POWER_CONTROLS_PD_INV_VALUE_MASK 0xFFFFFFFE
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_POWER_CONTROLS_PD_SIZE 1
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_POWER_CONTROLS_PD_DEFAULT 1
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_POWER_CONTROLS_PD 0x2
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_POWER_CONTROLS_PS_OFFSET 0
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_POWER_CONTROLS_PS_MASK 0x1
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_POWER_CONTROLS_PS_INV_MASK 0xFFFFFFFE
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_POWER_CONTROLS_PS_VALUE_MASK 0x0
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_POWER_CONTROLS_PS_INV_VALUE_MASK 0xFFFFFFFF
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_POWER_CONTROLS_PS_SIZE 1
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_POWER_CONTROLS_PS_DEFAULT 0
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_POWER_CONTROLS_PS 0x1
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_ACCESS_TIMERS_HOLD_STROBE_1_TIMING_OFFSET 16
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_ACCESS_TIMERS_HOLD_STROBE_1_TIMING_MASK 0xFF0000
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_ACCESS_TIMERS_HOLD_STROBE_1_TIMING_INV_MASK 0xFF00FFFF
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_ACCESS_TIMERS_HOLD_STROBE_1_TIMING_VALUE_MASK 0x7F8000
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_ACCESS_TIMERS_HOLD_STROBE_1_TIMING_INV_VALUE_MASK 0xFF807FFF
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_ACCESS_TIMERS_HOLD_STROBE_1_TIMING_SIZE 8
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_ACCESS_TIMERS_HOLD_STROBE_1_TIMING_DEFAULT 0
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_ACCESS_TIMERS_SETUP_STROBE_0_TIMING_OFFSET 8
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_ACCESS_TIMERS_SETUP_STROBE_0_TIMING_MASK 0xFF00
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_ACCESS_TIMERS_SETUP_STROBE_0_TIMING_INV_MASK 0xFFFF00FF
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_ACCESS_TIMERS_SETUP_STROBE_0_TIMING_VALUE_MASK 0x7F80
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_ACCESS_TIMERS_SETUP_STROBE_0_TIMING_INV_VALUE_MASK 0xFFFF807F
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_ACCESS_TIMERS_SETUP_STROBE_0_TIMING_SIZE 8
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_ACCESS_TIMERS_SETUP_STROBE_0_TIMING_DEFAULT 0
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_ACCESS_TIMERS_CTRL_TO_STROBE_TIMING_OFFSET 4
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_ACCESS_TIMERS_CTRL_TO_STROBE_TIMING_MASK 0xF0
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_ACCESS_TIMERS_CTRL_TO_STROBE_TIMING_INV_MASK 0xFFFFFF0F
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_ACCESS_TIMERS_CTRL_TO_STROBE_TIMING_VALUE_MASK 0x78
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_ACCESS_TIMERS_CTRL_TO_STROBE_TIMING_INV_VALUE_MASK 0xFFFFFF87
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_ACCESS_TIMERS_CTRL_TO_STROBE_TIMING_SIZE 4
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_ACCESS_TIMERS_CTRL_TO_STROBE_TIMING_DEFAULT 0
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_ACCESS_TIMERS_SETUP_HOLD_TIMING_OFFSET 0
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_ACCESS_TIMERS_SETUP_HOLD_TIMING_MASK 0xF
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_ACCESS_TIMERS_SETUP_HOLD_TIMING_INV_MASK 0xFFFFFFF0
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_ACCESS_TIMERS_SETUP_HOLD_TIMING_VALUE_MASK 0x7
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_ACCESS_TIMERS_SETUP_HOLD_TIMING_INV_VALUE_MASK 0xFFFFFFF8
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_ACCESS_TIMERS_SETUP_HOLD_TIMING_SIZE 4
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_ACCESS_TIMERS_SETUP_HOLD_TIMING_DEFAULT 0
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_ADDRESS_EFC_DW_ADDRESS_OFFSET 0
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_ADDRESS_EFC_DW_ADDRESS_MASK 0xFF
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_ADDRESS_EFC_DW_ADDRESS_INV_MASK 0xFFFFFF00
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_ADDRESS_EFC_DW_ADDRESS_VALUE_MASK 0x7F
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_ADDRESS_EFC_DW_ADDRESS_INV_VALUE_MASK 0xFFFFFF80
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_ADDRESS_EFC_DW_ADDRESS_SIZE 8
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_ADDRESS_EFC_DW_ADDRESS_DEFAULT 0
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_PGM_DATA_PGM_DATA_OFFSET 0
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_PGM_DATA_PGM_DATA_MASK 0xFFFFFFFF
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_PGM_DATA_PGM_DATA_INV_MASK 0x0
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_PGM_DATA_PGM_DATA_VALUE_MASK 0x7FFFFFFF
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_PGM_DATA_PGM_DATA_INV_VALUE_MASK 0x80000000
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_PGM_DATA_PGM_DATA_SIZE 32
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_PGM_DATA_PGM_DATA_DEFAULT 0
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_RD_DATA_RD_DATA_OFFSET 0
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_RD_DATA_RD_DATA_MASK 0xFFFFFFFF
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_RD_DATA_RD_DATA_INV_MASK 0x0
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_RD_DATA_RD_DATA_VALUE_MASK 0x7FFFFFFF
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_RD_DATA_RD_DATA_INV_VALUE_MASK 0x80000000
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_RD_DATA_RD_DATA_SIZE 32
#define SECP_KAM_OTP_EFC_KAM_OTP_EFC_RD_DATA_RD_DATA_DEFAULT 0
#define SECP_KAM_OTP_LANE_CONFIG_LANE_ENABLE_OFFSET 31  /* LANE_ENABLE DESCRIPTION :The OTP Lane range defined by ( LANE_START,LANE_COUNT ) is enabled  */
#define SECP_KAM_OTP_LANE_CONFIG_LANE_ENABLE_MASK 0x80000000
#define SECP_KAM_OTP_LANE_CONFIG_LANE_ENABLE_INV_MASK 0x7FFFFFFF
#define SECP_KAM_OTP_LANE_CONFIG_LANE_ENABLE_VALUE_MASK 0x40000000
#define SECP_KAM_OTP_LANE_CONFIG_LANE_ENABLE_INV_VALUE_MASK 0xBFFFFFFF
#define SECP_KAM_OTP_LANE_CONFIG_LANE_ENABLE_SIZE 1
#define SECP_KAM_OTP_LANE_CONFIG_LANE_ENABLE_DEFAULT 0
#define SECP_KAM_OTP_LANE_CONFIG_LANE_ENABLE 0x80000000  /* LANE_ENABLE DESCRIPTION :The OTP Lane range defined by ( LANE_START,LANE_COUNT ) is enabled */
#define SECP_KAM_OTP_LANE_CONFIG_LANE_COUNT_OFFSET 16  /* LANE_COUNT DESCRIPTION :LANE_COUNT specifies the number of OTP rows in the LANE Range  */
#define SECP_KAM_OTP_LANE_CONFIG_LANE_COUNT_MASK 0x3F0000
#define SECP_KAM_OTP_LANE_CONFIG_LANE_COUNT_INV_MASK 0xFFC0FFFF
#define SECP_KAM_OTP_LANE_CONFIG_LANE_COUNT_VALUE_MASK 0x1F8000
#define SECP_KAM_OTP_LANE_CONFIG_LANE_COUNT_INV_VALUE_MASK 0xFFE07FFF
#define SECP_KAM_OTP_LANE_CONFIG_LANE_COUNT_SIZE 6
#define SECP_KAM_OTP_LANE_CONFIG_LANE_COUNT_DEFAULT 0
#define SECP_KAM_OTP_LANE_CONFIG_LANE_START_OFFSET 0  /* LANE_START DESCRIPTION :LANE_START field specifies OTP Row address of the OTP lane range.  */
#define SECP_KAM_OTP_LANE_CONFIG_LANE_START_MASK 0x3FF
#define SECP_KAM_OTP_LANE_CONFIG_LANE_START_INV_MASK 0xFFFFFC00
#define SECP_KAM_OTP_LANE_CONFIG_LANE_START_VALUE_MASK 0x1FF
#define SECP_KAM_OTP_LANE_CONFIG_LANE_START_INV_VALUE_MASK 0xFFFFFE00
#define SECP_KAM_OTP_LANE_CONFIG_LANE_START_SIZE 10
#define SECP_KAM_OTP_LANE_CONFIG_LANE_START_DEFAULT 0
#define SECP_KAM_OTP_LANE_ACCESS_OTP_LANE_LOCK_OFFSET 2  /* OTP_LANE_LOCK DESCRIPTION :When this bit is set, KAM_OTP_LANE cannot be modified Like RE and WE, this field cannot be cleared when LCM_MODE==PRODUCTION and HW Control KAM_OAF_EN == 1  */
#define SECP_KAM_OTP_LANE_ACCESS_OTP_LANE_LOCK_MASK 0x4
#define SECP_KAM_OTP_LANE_ACCESS_OTP_LANE_LOCK_INV_MASK 0xFFFFFFFB
#define SECP_KAM_OTP_LANE_ACCESS_OTP_LANE_LOCK_VALUE_MASK 0x2
#define SECP_KAM_OTP_LANE_ACCESS_OTP_LANE_LOCK_INV_VALUE_MASK 0xFFFFFFFD
#define SECP_KAM_OTP_LANE_ACCESS_OTP_LANE_LOCK_SIZE 1
#define SECP_KAM_OTP_LANE_ACCESS_OTP_LANE_LOCK_DEFAULT 0
#define SECP_KAM_OTP_LANE_ACCESS_OTP_LANE_LOCK 0x4  /* OTP_LANE_LOCK DESCRIPTION :When this bit is set, KAM_OTP_LANE cannot be modified Like RE and WE, this field cannot be cleared when LCM_MODE==PRODUCTION and HW Control KAM_OAF_EN == 1 */
#define SECP_KAM_OTP_LANE_ACCESS_RE_OFFSET 1  /* RE DESCRIPTION :1: Enabled range has read permissions 0: Enable range is not readable (i.e. reads return 0 + read_deny interrupt)  */
#define SECP_KAM_OTP_LANE_ACCESS_RE_MASK 0x2
#define SECP_KAM_OTP_LANE_ACCESS_RE_INV_MASK 0xFFFFFFFD
#define SECP_KAM_OTP_LANE_ACCESS_RE_VALUE_MASK 0x1
#define SECP_KAM_OTP_LANE_ACCESS_RE_INV_VALUE_MASK 0xFFFFFFFE
#define SECP_KAM_OTP_LANE_ACCESS_RE_SIZE 1
#define SECP_KAM_OTP_LANE_ACCESS_RE_DEFAULT 1
#define SECP_KAM_OTP_LANE_ACCESS_RE 0x2  /* RE DESCRIPTION :1: Enabled range has read permissions 0: Enable range is not readable (i.e. reads return 0 + read_deny interrupt) */
#define SECP_KAM_OTP_LANE_ACCESS_WE_OFFSET 0  /* WE DESCRIPTION :1: Enabled range has write permissions 0: Enable range is not writable (i.e. write ignored + write_deny interrupt)  */
#define SECP_KAM_OTP_LANE_ACCESS_WE_MASK 0x1
#define SECP_KAM_OTP_LANE_ACCESS_WE_INV_MASK 0xFFFFFFFE
#define SECP_KAM_OTP_LANE_ACCESS_WE_VALUE_MASK 0x0
#define SECP_KAM_OTP_LANE_ACCESS_WE_INV_VALUE_MASK 0xFFFFFFFF
#define SECP_KAM_OTP_LANE_ACCESS_WE_SIZE 1
#define SECP_KAM_OTP_LANE_ACCESS_WE_DEFAULT 1
#define SECP_KAM_OTP_LANE_ACCESS_WE 0x1  /* WE DESCRIPTION :1: Enabled range has write permissions 0: Enable range is not writable (i.e. write ignored + write_deny interrupt) */
#define SECP_KAM_OTP_LANE_STATUS_WRITE_DENY_OFFSET 1  /* WRITE_DENY DESCRIPTION :A program command to OTP matched OTP LANE[i] with LANE_ENABLE == 1 && WE == 0  */
#define SECP_KAM_OTP_LANE_STATUS_WRITE_DENY_MASK 0x2
#define SECP_KAM_OTP_LANE_STATUS_WRITE_DENY_INV_MASK 0xFFFFFFFD
#define SECP_KAM_OTP_LANE_STATUS_WRITE_DENY_VALUE_MASK 0x1
#define SECP_KAM_OTP_LANE_STATUS_WRITE_DENY_INV_VALUE_MASK 0xFFFFFFFE
#define SECP_KAM_OTP_LANE_STATUS_WRITE_DENY_SIZE 1
#define SECP_KAM_OTP_LANE_STATUS_WRITE_DENY_DEFAULT 0
#define SECP_KAM_OTP_LANE_STATUS_WRITE_DENY 0x2  /* WRITE_DENY DESCRIPTION :A program command to OTP matched OTP LANE[i] with LANE_ENABLE == 1 && WE == 0 */
#define SECP_KAM_OTP_LANE_STATUS_READ_DENY_OFFSET 0  /* READ_DENY DESCRIPTION :A read command to OTP matched an OTP LANE[i] with LANE_ENABLE == 1 && RE == 0  */
#define SECP_KAM_OTP_LANE_STATUS_READ_DENY_MASK 0x1
#define SECP_KAM_OTP_LANE_STATUS_READ_DENY_INV_MASK 0xFFFFFFFE
#define SECP_KAM_OTP_LANE_STATUS_READ_DENY_VALUE_MASK 0x0
#define SECP_KAM_OTP_LANE_STATUS_READ_DENY_INV_VALUE_MASK 0xFFFFFFFF
#define SECP_KAM_OTP_LANE_STATUS_READ_DENY_SIZE 1
#define SECP_KAM_OTP_LANE_STATUS_READ_DENY_DEFAULT 0
#define SECP_KAM_OTP_LANE_STATUS_READ_DENY 0x1  /* READ_DENY DESCRIPTION :A read command to OTP matched an OTP LANE[i] with LANE_ENABLE == 1 && RE == 0 */
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_VALID_VALID_OFFSET 0
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_VALID_VALID_MASK 0x1
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_VALID_VALID_INV_MASK 0xFFFFFFFE
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_VALID_VALID_VALUE_MASK 0x0
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_VALID_VALID_INV_VALUE_MASK 0xFFFFFFFF
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_VALID_VALID_SIZE 1
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_VALID_VALID_DEFAULT 0
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_VALID_VALID 0x1
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_HWC_VALID_OFFSET 31  /* HWC_VALID DESCRIPTION :HWC_VALID is an exact copy of the KAM_OTP_HW_CONTROL_VALID.VALID field  */
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_HWC_VALID_MASK 0x80000000
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_HWC_VALID_INV_MASK 0x7FFFFFFF
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_HWC_VALID_VALUE_MASK 0x40000000
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_HWC_VALID_INV_VALUE_MASK 0xBFFFFFFF
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_HWC_VALID_SIZE 1
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_HWC_VALID_DEFAULT 0
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_HWC_VALID 0x80000000  /* HWC_VALID DESCRIPTION :HWC_VALID is an exact copy of the KAM_OTP_HW_CONTROL_VALID.VALID field */
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_AUTOLOAD_VALID_OFFSET 30
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_AUTOLOAD_VALID_MASK 0x40000000
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_AUTOLOAD_VALID_INV_MASK 0xBFFFFFFF
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_AUTOLOAD_VALID_VALUE_MASK 0x20000000
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_AUTOLOAD_VALID_INV_VALUE_MASK 0xDFFFFFFF
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_AUTOLOAD_VALID_SIZE 1
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_AUTOLOAD_VALID_DEFAULT 0
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_AUTOLOAD_VALID 0x40000000
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_AUTOLOAD_ERR_OFFSET 29
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_AUTOLOAD_ERR_MASK 0x20000000
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_AUTOLOAD_ERR_INV_MASK 0xDFFFFFFF
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_AUTOLOAD_ERR_VALUE_MASK 0x10000000
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_AUTOLOAD_ERR_INV_VALUE_MASK 0xEFFFFFFF
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_AUTOLOAD_ERR_SIZE 1
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_AUTOLOAD_ERR_DEFAULT 0
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_AUTOLOAD_ERR 0x20000000
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_LCM_MODE_OFFSET 12  /* LCM_MODE DESCRIPTION :  */
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_LCM_MODE_MASK 0x1000
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_LCM_MODE_INV_MASK 0xFFFFEFFF
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_LCM_MODE_VALUE_MASK 0x800
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_LCM_MODE_INV_VALUE_MASK 0xFFFFF7FF
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_LCM_MODE_SIZE 1
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_LCM_MODE_DEFAULT 1
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_LCM_MODE 0x1000  /* LCM_MODE DESCRIPTION : */
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_KAM_KV_EN_OFFSET 11
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_KAM_KV_EN_MASK 0x800
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_KAM_KV_EN_INV_MASK 0xFFFFF7FF
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_KAM_KV_EN_VALUE_MASK 0x400
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_KAM_KV_EN_INV_VALUE_MASK 0xFFFFFBFF
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_KAM_KV_EN_SIZE 1
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_KAM_KV_EN_DEFAULT 1
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_KAM_KV_EN 0x800
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_KAM_OAF_EN_OFFSET 10
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_KAM_OAF_EN_MASK 0x400
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_KAM_OAF_EN_INV_MASK 0xFFFFFBFF
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_KAM_OAF_EN_VALUE_MASK 0x200
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_KAM_OAF_EN_INV_VALUE_MASK 0xFFFFFDFF
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_KAM_OAF_EN_SIZE 1
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_KAM_OAF_EN_DEFAULT 1
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_KAM_OAF_EN 0x400
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_KAM_HWC_LOCK_ENABLE_OFFSET 9
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_KAM_HWC_LOCK_ENABLE_MASK 0x200
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_KAM_HWC_LOCK_ENABLE_INV_MASK 0xFFFFFDFF
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_KAM_HWC_LOCK_ENABLE_VALUE_MASK 0x100
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_KAM_HWC_LOCK_ENABLE_INV_VALUE_MASK 0xFFFFFEFF
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_KAM_HWC_LOCK_ENABLE_SIZE 1
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_KAM_HWC_LOCK_ENABLE_DEFAULT 1
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_KAM_HWC_LOCK_ENABLE 0x200
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_RESERVED_1_OFFSET 8
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_RESERVED_1_MASK 0x100
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_RESERVED_1_INV_MASK 0xFFFFFEFF
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_RESERVED_1_VALUE_MASK 0x80
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_RESERVED_1_INV_VALUE_MASK 0xFFFFFF7F
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_RESERVED_1_SIZE 1
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_RESERVED_1_DEFAULT 1
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_RESERVED_1 0x100
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_ROT_EXCLUSIVE_ACCESS_OFFSET 7
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_ROT_EXCLUSIVE_ACCESS_MASK 0x80
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_ROT_EXCLUSIVE_ACCESS_INV_MASK 0xFFFFFF7F
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_ROT_EXCLUSIVE_ACCESS_VALUE_MASK 0x40
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_ROT_EXCLUSIVE_ACCESS_INV_VALUE_MASK 0xFFFFFFBF
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_ROT_EXCLUSIVE_ACCESS_SIZE 1
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_ROT_EXCLUSIVE_ACCESS_DEFAULT 1
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_ROT_EXCLUSIVE_ACCESS 0x80
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_RESERVED_0_OFFSET 6
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_RESERVED_0_MASK 0x40
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_RESERVED_0_INV_MASK 0xFFFFFFBF
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_RESERVED_0_VALUE_MASK 0x20
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_RESERVED_0_INV_VALUE_MASK 0xFFFFFFDF
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_RESERVED_0_SIZE 1
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_RESERVED_0_DEFAULT 1
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_RESERVED_0 0x40
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_SOFT_RESET_DISABLE_OFFSET 5
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_SOFT_RESET_DISABLE_MASK 0x20
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_SOFT_RESET_DISABLE_INV_MASK 0xFFFFFFDF
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_SOFT_RESET_DISABLE_VALUE_MASK 0x10
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_SOFT_RESET_DISABLE_INV_VALUE_MASK 0xFFFFFFEF
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_SOFT_RESET_DISABLE_SIZE 1
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_SOFT_RESET_DISABLE_DEFAULT 1
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_SOFT_RESET_DISABLE 0x20
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_SEC_LOAD_FAIL_REPORT_OFFSET 4
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_SEC_LOAD_FAIL_REPORT_MASK 0x10
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_SEC_LOAD_FAIL_REPORT_INV_MASK 0xFFFFFFEF
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_SEC_LOAD_FAIL_REPORT_VALUE_MASK 0x8
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_SEC_LOAD_FAIL_REPORT_INV_VALUE_MASK 0xFFFFFFF7
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_SEC_LOAD_FAIL_REPORT_SIZE 1
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_SEC_LOAD_FAIL_REPORT_DEFAULT 1
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_SEC_LOAD_FAIL_REPORT 0x10
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_ROT_ROM_BOOT_SRC_OFFSET 3
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_ROT_ROM_BOOT_SRC_MASK 0x8
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_ROT_ROM_BOOT_SRC_INV_MASK 0xFFFFFFF7
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_ROT_ROM_BOOT_SRC_VALUE_MASK 0x4
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_ROT_ROM_BOOT_SRC_INV_VALUE_MASK 0xFFFFFFFB
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_ROT_ROM_BOOT_SRC_SIZE 1
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_ROT_ROM_BOOT_SRC_DEFAULT 1
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_ROT_ROM_BOOT_SRC 0x8
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_UART_DISABLE_OFFSET 2
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_UART_DISABLE_MASK 0x4
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_UART_DISABLE_INV_MASK 0xFFFFFFFB
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_UART_DISABLE_VALUE_MASK 0x2
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_UART_DISABLE_INV_VALUE_MASK 0xFFFFFFFD
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_UART_DISABLE_SIZE 1
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_UART_DISABLE_DEFAULT 1
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_UART_DISABLE 0x4
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_SOC_DEBUG_OFFSET 1
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_SOC_DEBUG_MASK 0x2
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_SOC_DEBUG_INV_MASK 0xFFFFFFFD
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_SOC_DEBUG_VALUE_MASK 0x1
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_SOC_DEBUG_INV_VALUE_MASK 0xFFFFFFFE
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_SOC_DEBUG_SIZE 1
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_SOC_DEBUG_DEFAULT 1
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_SOC_DEBUG 0x2
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_ROT_DEBUG_OFFSET 0
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_ROT_DEBUG_MASK 0x1
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_ROT_DEBUG_INV_MASK 0xFFFFFFFE
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_ROT_DEBUG_VALUE_MASK 0x0
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_ROT_DEBUG_INV_VALUE_MASK 0xFFFFFFFF
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_ROT_DEBUG_SIZE 1
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_ROT_DEBUG_DEFAULT 1
#define SECP_ROT_KAM_KAM_OTP_HW_CONTROL_ROT_DEBUG 0x1
#define SECP_KAM_KV_RANGE_KV_ENABLE_OFFSET 31  /* KV_ENABLE DESCRIPTION :The range defined by ( KV_START,KV_COUNT ) is enabled  */
#define SECP_KAM_KV_RANGE_KV_ENABLE_MASK 0x80000000
#define SECP_KAM_KV_RANGE_KV_ENABLE_INV_MASK 0x7FFFFFFF
#define SECP_KAM_KV_RANGE_KV_ENABLE_VALUE_MASK 0x40000000
#define SECP_KAM_KV_RANGE_KV_ENABLE_INV_VALUE_MASK 0xBFFFFFFF
#define SECP_KAM_KV_RANGE_KV_ENABLE_SIZE 1
#define SECP_KAM_KV_RANGE_KV_ENABLE_DEFAULT 0
#define SECP_KAM_KV_RANGE_KV_ENABLE 0x80000000  /* KV_ENABLE DESCRIPTION :The range defined by ( KV_START,KV_COUNT ) is enabled */
#define SECP_KAM_KV_RANGE_KV_COUNT_OFFSET 16  /* KV_COUNT DESCRIPTION :KV_COUNT specifies the number of 128-bit SCRATCH entries in the KV Range  */
#define SECP_KAM_KV_RANGE_KV_COUNT_MASK 0xFF0000
#define SECP_KAM_KV_RANGE_KV_COUNT_INV_MASK 0xFF00FFFF
#define SECP_KAM_KV_RANGE_KV_COUNT_VALUE_MASK 0x7F8000
#define SECP_KAM_KV_RANGE_KV_COUNT_INV_VALUE_MASK 0xFF807FFF
#define SECP_KAM_KV_RANGE_KV_COUNT_SIZE 8
#define SECP_KAM_KV_RANGE_KV_COUNT_DEFAULT 0
#define SECP_KAM_KV_RANGE_KV_START_OFFSET 4  /* KV_START DESCRIPTION :KV_START field specifies the 128-bit start address of the range from the start of SCRATCH memory. The byte address may be written from [11:0] and the bottom 4 bits will be zero regardless of what was written.  */
#define SECP_KAM_KV_RANGE_KV_START_MASK 0xFF0
#define SECP_KAM_KV_RANGE_KV_START_INV_MASK 0xFFFFF00F
#define SECP_KAM_KV_RANGE_KV_START_VALUE_MASK 0x7F8
#define SECP_KAM_KV_RANGE_KV_START_INV_VALUE_MASK 0xFFFFF807
#define SECP_KAM_KV_RANGE_KV_START_SIZE 8
#define SECP_KAM_KV_RANGE_KV_START_DEFAULT 0
#define SECP_KAM_KV_ACCESS_KV_RANGE_LOCK_OFFSET 2  /* KV_RANGE_LOCK DESCRIPTION :When this bit is set, KAM_KV_RANGE cannot be modified Like RE and WE, this field cannot be cleared when LCM_MODE==PRODUCTION and HW Control KAM_KV_EN == 1  */
#define SECP_KAM_KV_ACCESS_KV_RANGE_LOCK_MASK 0x4
#define SECP_KAM_KV_ACCESS_KV_RANGE_LOCK_INV_MASK 0xFFFFFFFB
#define SECP_KAM_KV_ACCESS_KV_RANGE_LOCK_VALUE_MASK 0x2
#define SECP_KAM_KV_ACCESS_KV_RANGE_LOCK_INV_VALUE_MASK 0xFFFFFFFD
#define SECP_KAM_KV_ACCESS_KV_RANGE_LOCK_SIZE 1
#define SECP_KAM_KV_ACCESS_KV_RANGE_LOCK_DEFAULT 0
#define SECP_KAM_KV_ACCESS_KV_RANGE_LOCK 0x4  /* KV_RANGE_LOCK DESCRIPTION :When this bit is set, KAM_KV_RANGE cannot be modified Like RE and WE, this field cannot be cleared when LCM_MODE==PRODUCTION and HW Control KAM_KV_EN == 1 */
#define SECP_KAM_KV_ACCESS_RE_OFFSET 1  /* RE DESCRIPTION :1: Enabled range has read permissions 0: Enable range is not readable (i.e. reads return 0 + read_deny interrupt)  */
#define SECP_KAM_KV_ACCESS_RE_MASK 0x2
#define SECP_KAM_KV_ACCESS_RE_INV_MASK 0xFFFFFFFD
#define SECP_KAM_KV_ACCESS_RE_VALUE_MASK 0x1
#define SECP_KAM_KV_ACCESS_RE_INV_VALUE_MASK 0xFFFFFFFE
#define SECP_KAM_KV_ACCESS_RE_SIZE 1
#define SECP_KAM_KV_ACCESS_RE_DEFAULT 1
#define SECP_KAM_KV_ACCESS_RE 0x2  /* RE DESCRIPTION :1: Enabled range has read permissions 0: Enable range is not readable (i.e. reads return 0 + read_deny interrupt) */
#define SECP_KAM_KV_ACCESS_WE_OFFSET 0  /* WE DESCRIPTION :1: Enabled range has write permissions 0: Enable range is not writable (i.e. write ignored + write_deny interrupt)  */
#define SECP_KAM_KV_ACCESS_WE_MASK 0x1
#define SECP_KAM_KV_ACCESS_WE_INV_MASK 0xFFFFFFFE
#define SECP_KAM_KV_ACCESS_WE_VALUE_MASK 0x0
#define SECP_KAM_KV_ACCESS_WE_INV_VALUE_MASK 0xFFFFFFFF
#define SECP_KAM_KV_ACCESS_WE_SIZE 1
#define SECP_KAM_KV_ACCESS_WE_DEFAULT 1
#define SECP_KAM_KV_ACCESS_WE 0x1  /* WE DESCRIPTION :1: Enabled range has write permissions 0: Enable range is not writable (i.e. write ignored + write_deny interrupt) */
#define SECP_KAM_KV_STATUS_WRITE_DENY_OFFSET 1  /* WRITE_DENY DESCRIPTION :A write to SCRATCH RAM matched a KV Range with KV_ENABLE == 1 && WE == 0  */
#define SECP_KAM_KV_STATUS_WRITE_DENY_MASK 0x2
#define SECP_KAM_KV_STATUS_WRITE_DENY_INV_MASK 0xFFFFFFFD
#define SECP_KAM_KV_STATUS_WRITE_DENY_VALUE_MASK 0x1
#define SECP_KAM_KV_STATUS_WRITE_DENY_INV_VALUE_MASK 0xFFFFFFFE
#define SECP_KAM_KV_STATUS_WRITE_DENY_SIZE 1
#define SECP_KAM_KV_STATUS_WRITE_DENY_DEFAULT 0
#define SECP_KAM_KV_STATUS_WRITE_DENY 0x2  /* WRITE_DENY DESCRIPTION :A write to SCRATCH RAM matched a KV Range with KV_ENABLE == 1 && WE == 0 */
#define SECP_KAM_KV_STATUS_READ_DENY_OFFSET 0  /* READ_DENY DESCRIPTION :A read from SCRATCH RAM matched a KV Range with KV_ENABLE == 1 && RE == 0  */
#define SECP_KAM_KV_STATUS_READ_DENY_MASK 0x1
#define SECP_KAM_KV_STATUS_READ_DENY_INV_MASK 0xFFFFFFFE
#define SECP_KAM_KV_STATUS_READ_DENY_VALUE_MASK 0x0
#define SECP_KAM_KV_STATUS_READ_DENY_INV_VALUE_MASK 0xFFFFFFFF
#define SECP_KAM_KV_STATUS_READ_DENY_SIZE 1
#define SECP_KAM_KV_STATUS_READ_DENY_DEFAULT 0
#define SECP_KAM_KV_STATUS_READ_DENY 0x1  /* READ_DENY DESCRIPTION :A read from SCRATCH RAM matched a KV Range with KV_ENABLE == 1 && RE == 0 */
#define SECP_KAM_PMR_LIST_KAM_PMR_ENTRY_DATA_OFFSET 0  /* DATA DESCRIPTION :PMR data: Data are organized as most significant 32-bits at index 0 Each PMR consists of 4,8,12,or 16 32-bit DATA entries FW cannot write the PMR directly. Use PMR Extend function to update PMRs. The PMR Extend function writes using this address (FW access is blocked)  */
#define SECP_KAM_PMR_LIST_KAM_PMR_ENTRY_DATA_MASK 0xFFFFFFFF
#define SECP_KAM_PMR_LIST_KAM_PMR_ENTRY_DATA_INV_MASK 0x0
#define SECP_KAM_PMR_LIST_KAM_PMR_ENTRY_DATA_VALUE_MASK 0x7FFFFFFF
#define SECP_KAM_PMR_LIST_KAM_PMR_ENTRY_DATA_INV_VALUE_MASK 0x80000000
#define SECP_KAM_PMR_LIST_KAM_PMR_ENTRY_DATA_SIZE 32
#define SECP_KAM_PMR_LIST_KAM_PMR_ENTRY_DATA_DEFAULT 0
#define SECP_ROT_KAM_KAM_PMR_STATUS_PMR_VALID_OFFSET 0  /* PMR_VALID DESCRIPTION :PMR[n].ENTRY[i] is not valid and will read as zeros VALID[n][i] == 1 : the 32-bit PMR entry, PMR[n].ENTRY[i] valid. It's value will be returned on a read. VALID[n][i] == 0 : the 32-bit PMR entry, PMR[n].ENTRY[i] is not valid. Reading this entry will return 0.  */
#define SECP_ROT_KAM_KAM_PMR_STATUS_PMR_VALID_MASK 0xFFFF
#define SECP_ROT_KAM_KAM_PMR_STATUS_PMR_VALID_INV_MASK 0xFFFF0000
#define SECP_ROT_KAM_KAM_PMR_STATUS_PMR_VALID_VALUE_MASK 0x7FFF
#define SECP_ROT_KAM_KAM_PMR_STATUS_PMR_VALID_INV_VALUE_MASK 0xFFFF8000
#define SECP_ROT_KAM_KAM_PMR_STATUS_PMR_VALID_SIZE 16
#define SECP_ROT_KAM_KAM_PMR_STATUS_PMR_VALID_DEFAULT 0
#define SECP_ROT_KAM_KAM_PMR_EXTEND_MEASUREMENT_SRC_ADDR_OFFSET 0  /* ADDR DESCRIPTION :address of Measurement source, MSMT. HW calulates SHA(PMR | MSMT)  */
#define SECP_ROT_KAM_KAM_PMR_EXTEND_MEASUREMENT_SRC_ADDR_MASK 0xFFFFFFFF
#define SECP_ROT_KAM_KAM_PMR_EXTEND_MEASUREMENT_SRC_ADDR_INV_MASK 0x0
#define SECP_ROT_KAM_KAM_PMR_EXTEND_MEASUREMENT_SRC_ADDR_VALUE_MASK 0x7FFFFFFF
#define SECP_ROT_KAM_KAM_PMR_EXTEND_MEASUREMENT_SRC_ADDR_INV_VALUE_MASK 0x80000000
#define SECP_ROT_KAM_KAM_PMR_EXTEND_MEASUREMENT_SRC_ADDR_SIZE 32
#define SECP_ROT_KAM_KAM_PMR_EXTEND_MEASUREMENT_SRC_ADDR_DEFAULT 0
#define SECP_ROT_KAM_KAM_PMR_EXTEND_TARGET_PMR_SIZE_OFFSET 4  /* PMR_SIZE DESCRIPTION :encoded for number of 32-bit entries PMR extend operation. The MSG must be the size as the PMR. 3 is an illegal value  */
#define SECP_ROT_KAM_KAM_PMR_EXTEND_TARGET_PMR_SIZE_MASK 0x30
#define SECP_ROT_KAM_KAM_PMR_EXTEND_TARGET_PMR_SIZE_INV_MASK 0xFFFFFFCF
#define SECP_ROT_KAM_KAM_PMR_EXTEND_TARGET_PMR_SIZE_VALUE_MASK 0x18
#define SECP_ROT_KAM_KAM_PMR_EXTEND_TARGET_PMR_SIZE_INV_VALUE_MASK 0xFFFFFFE7
#define SECP_ROT_KAM_KAM_PMR_EXTEND_TARGET_PMR_SIZE_SIZE 2
#define SECP_ROT_KAM_KAM_PMR_EXTEND_TARGET_PMR_SIZE_DEFAULT 0
#define SECP_ROT_KAM_KAM_PMR_EXTEND_TARGET_PMR_INDEX_OFFSET 0
#define SECP_ROT_KAM_KAM_PMR_EXTEND_TARGET_PMR_INDEX_MASK 0x7
#define SECP_ROT_KAM_KAM_PMR_EXTEND_TARGET_PMR_INDEX_INV_MASK 0xFFFFFFF8
#define SECP_ROT_KAM_KAM_PMR_EXTEND_TARGET_PMR_INDEX_VALUE_MASK 0x3
#define SECP_ROT_KAM_KAM_PMR_EXTEND_TARGET_PMR_INDEX_INV_VALUE_MASK 0xFFFFFFFC
#define SECP_ROT_KAM_KAM_PMR_EXTEND_TARGET_PMR_INDEX_SIZE 3
#define SECP_ROT_KAM_KAM_PMR_EXTEND_TARGET_PMR_INDEX_DEFAULT 0
#define SECP_ROT_KAM_KAM_PMR_SHA_CONFIG_MODE_OFFSET 24  /* MODE DESCRIPTION :Mode of operaton of SHA. 7'b0000001: SHA_256 7'b0000010: SHA_384 7'b0000100: SHA_512 7'b0001000: HMAC_SHA_256 7'b0010000: HMAC_SHA_384 7'b0100000: HMAC_SHA_512  */
#define SECP_ROT_KAM_KAM_PMR_SHA_CONFIG_MODE_MASK 0x7F000000
#define SECP_ROT_KAM_KAM_PMR_SHA_CONFIG_MODE_INV_MASK 0x80FFFFFF
#define SECP_ROT_KAM_KAM_PMR_SHA_CONFIG_MODE_VALUE_MASK 0x3F800000
#define SECP_ROT_KAM_KAM_PMR_SHA_CONFIG_MODE_INV_VALUE_MASK 0xC07FFFFF
#define SECP_ROT_KAM_KAM_PMR_SHA_CONFIG_MODE_SIZE 7
#define SECP_ROT_KAM_KAM_PMR_SHA_CONFIG_MODE_DEFAULT 1
#define SECP_ROT_KAM_KAM_PMR_SHA_CONFIG_KEY_SIZE_OFFSET 16  /* KEY_SIZE DESCRIPTION :Size of HMAC key. <li>3'b001: KEY_128: Use 128-bit key size, input at HMAC_KEY[0-3] <li>3'b010: KEY_192: Use 192-bit key size, input at HMAC_KEY[0-5] <li>3'b100: KEY_256: Use 256-bit key size, input at HMAC_KEY[0-7]  */
#define SECP_ROT_KAM_KAM_PMR_SHA_CONFIG_KEY_SIZE_MASK 0x70000
#define SECP_ROT_KAM_KAM_PMR_SHA_CONFIG_KEY_SIZE_INV_MASK 0xFFF8FFFF
#define SECP_ROT_KAM_KAM_PMR_SHA_CONFIG_KEY_SIZE_VALUE_MASK 0x38000
#define SECP_ROT_KAM_KAM_PMR_SHA_CONFIG_KEY_SIZE_INV_VALUE_MASK 0xFFFC7FFF
#define SECP_ROT_KAM_KAM_PMR_SHA_CONFIG_KEY_SIZE_SIZE 3
#define SECP_ROT_KAM_KAM_PMR_SHA_CONFIG_KEY_SIZE_DEFAULT 1
#define SECP_ROT_KAM_KAM_PMR_SHA_CONFIG_IN_LEVEL_OFFSET 8  /* IN_LEVEL DESCRIPTION :Input FIFO threshold controls SHA_INTR_STATE.IN_FIFO_AE signal. SHA_INTR_STATE.IN_FIFO_AE is latched to 1 when IN_LEVEL <= in_fifo_bytes_available  */
#define SECP_ROT_KAM_KAM_PMR_SHA_CONFIG_IN_LEVEL_MASK 0xFF00
#define SECP_ROT_KAM_KAM_PMR_SHA_CONFIG_IN_LEVEL_INV_MASK 0xFFFF00FF
#define SECP_ROT_KAM_KAM_PMR_SHA_CONFIG_IN_LEVEL_VALUE_MASK 0x7F80
#define SECP_ROT_KAM_KAM_PMR_SHA_CONFIG_IN_LEVEL_INV_VALUE_MASK 0xFFFF807F
#define SECP_ROT_KAM_KAM_PMR_SHA_CONFIG_IN_LEVEL_SIZE 8
#define SECP_ROT_KAM_KAM_PMR_SHA_CONFIG_IN_LEVEL_DEFAULT 0
#define SECP_ROT_KAM_KAM_PMR_SHA_CONFIG_DMA_IN_OFFSET 4  /* DMA_IN DESCRIPTION :Enable for DMA request signal for writing input data Use to protect BE Gate signals for power 0: Disable 1: Enable  */
#define SECP_ROT_KAM_KAM_PMR_SHA_CONFIG_DMA_IN_MASK 0x10
#define SECP_ROT_KAM_KAM_PMR_SHA_CONFIG_DMA_IN_INV_MASK 0xFFFFFFEF
#define SECP_ROT_KAM_KAM_PMR_SHA_CONFIG_DMA_IN_VALUE_MASK 0x8
#define SECP_ROT_KAM_KAM_PMR_SHA_CONFIG_DMA_IN_INV_VALUE_MASK 0xFFFFFFF7
#define SECP_ROT_KAM_KAM_PMR_SHA_CONFIG_DMA_IN_SIZE 1
#define SECP_ROT_KAM_KAM_PMR_SHA_CONFIG_DMA_IN_DEFAULT 0
#define SECP_ROT_KAM_KAM_PMR_SHA_CONFIG_DMA_IN 0x10  /* DMA_IN DESCRIPTION :Enable for DMA request signal for writing input data Use to protect BE Gate signals for power 0: Disable 1: Enable */
#define SECP_ROT_KAM_KAM_PMR_SHA_CONFIG_BYTE_SWAP_IN_OFFSET 1  /* BYTE_SWAP_IN DESCRIPTION :Enable endian byte swapping for input data Byte swapping based on this control applies to SHA_MSG, SHA_GEN_DIGEST, SHA_GEN_CONTEXT and SHA_VERIFY, SHA_DIGEST register writes 0: Disable 1: Enable  */
#define SECP_ROT_KAM_KAM_PMR_SHA_CONFIG_BYTE_SWAP_IN_MASK 0x2
#define SECP_ROT_KAM_KAM_PMR_SHA_CONFIG_BYTE_SWAP_IN_INV_MASK 0xFFFFFFFD
#define SECP_ROT_KAM_KAM_PMR_SHA_CONFIG_BYTE_SWAP_IN_VALUE_MASK 0x1
#define SECP_ROT_KAM_KAM_PMR_SHA_CONFIG_BYTE_SWAP_IN_INV_VALUE_MASK 0xFFFFFFFE
#define SECP_ROT_KAM_KAM_PMR_SHA_CONFIG_BYTE_SWAP_IN_SIZE 1
#define SECP_ROT_KAM_KAM_PMR_SHA_CONFIG_BYTE_SWAP_IN_DEFAULT 0
#define SECP_ROT_KAM_KAM_PMR_SHA_CONFIG_BYTE_SWAP_IN 0x2  /* BYTE_SWAP_IN DESCRIPTION :Enable endian byte swapping for input data Byte swapping based on this control applies to SHA_MSG, SHA_GEN_DIGEST, SHA_GEN_CONTEXT and SHA_VERIFY, SHA_DIGEST register writes 0: Disable 1: Enable */
#define SECP_ROT_KAM_KAM_PMR_SHA_CONFIG_BYTE_SWAP_OUT_OFFSET 0  /* BYTE_SWAP_OUT DESCRIPTION :Enable endian byte swapping for output data, applies to SHA_DIGEST register reads only 0: Disable 1: Enable  */
#define SECP_ROT_KAM_KAM_PMR_SHA_CONFIG_BYTE_SWAP_OUT_MASK 0x1
#define SECP_ROT_KAM_KAM_PMR_SHA_CONFIG_BYTE_SWAP_OUT_INV_MASK 0xFFFFFFFE
#define SECP_ROT_KAM_KAM_PMR_SHA_CONFIG_BYTE_SWAP_OUT_VALUE_MASK 0x0
#define SECP_ROT_KAM_KAM_PMR_SHA_CONFIG_BYTE_SWAP_OUT_INV_VALUE_MASK 0xFFFFFFFF
#define SECP_ROT_KAM_KAM_PMR_SHA_CONFIG_BYTE_SWAP_OUT_SIZE 1
#define SECP_ROT_KAM_KAM_PMR_SHA_CONFIG_BYTE_SWAP_OUT_DEFAULT 0
#define SECP_ROT_KAM_KAM_PMR_SHA_CONFIG_BYTE_SWAP_OUT 0x1  /* BYTE_SWAP_OUT DESCRIPTION :Enable endian byte swapping for output data, applies to SHA_DIGEST register reads only 0: Disable 1: Enable */
#define SECP_ROT_KAM_KAM_PMR_SHA_INTR_VERIFY_DONE_OFFSET 4  /* VERIFY_DONE DESCRIPTION :Verify done interrupt Status indicatinga hash digest verification following SHA_VERIFY command is complete.  */
#define SECP_ROT_KAM_KAM_PMR_SHA_INTR_VERIFY_DONE_MASK 0x10
#define SECP_ROT_KAM_KAM_PMR_SHA_INTR_VERIFY_DONE_INV_MASK 0xFFFFFFEF
#define SECP_ROT_KAM_KAM_PMR_SHA_INTR_VERIFY_DONE_VALUE_MASK 0x8
#define SECP_ROT_KAM_KAM_PMR_SHA_INTR_VERIFY_DONE_INV_VALUE_MASK 0xFFFFFFF7
#define SECP_ROT_KAM_KAM_PMR_SHA_INTR_VERIFY_DONE_SIZE 1
#define SECP_ROT_KAM_KAM_PMR_SHA_INTR_VERIFY_DONE_DEFAULT 0
#define SECP_ROT_KAM_KAM_PMR_SHA_INTR_VERIFY_DONE 0x10  /* VERIFY_DONE DESCRIPTION :Verify done interrupt Status indicatinga hash digest verification following SHA_VERIFY command is complete. */
#define SECP_ROT_KAM_KAM_PMR_SHA_INTR_GEN_DONE_OFFSET 3  /* GEN_DONE DESCRIPTION :Generate done interrupt Status indicating a hash digest or context data is generated following SHA_GEN_DIGEST or SHA_GEN_CONTEXT commands  */
#define SECP_ROT_KAM_KAM_PMR_SHA_INTR_GEN_DONE_MASK 0x8
#define SECP_ROT_KAM_KAM_PMR_SHA_INTR_GEN_DONE_INV_MASK 0xFFFFFFF7
#define SECP_ROT_KAM_KAM_PMR_SHA_INTR_GEN_DONE_VALUE_MASK 0x4
#define SECP_ROT_KAM_KAM_PMR_SHA_INTR_GEN_DONE_INV_VALUE_MASK 0xFFFFFFFB
#define SECP_ROT_KAM_KAM_PMR_SHA_INTR_GEN_DONE_SIZE 1
#define SECP_ROT_KAM_KAM_PMR_SHA_INTR_GEN_DONE_DEFAULT 0
#define SECP_ROT_KAM_KAM_PMR_SHA_INTR_GEN_DONE 0x8  /* GEN_DONE DESCRIPTION :Generate done interrupt Status indicating a hash digest or context data is generated following SHA_GEN_DIGEST or SHA_GEN_CONTEXT commands */
#define SECP_ROT_KAM_KAM_PMR_SHA_INTR_IN_FIFO_AE_OFFSET 2  /* IN_FIFO_AE DESCRIPTION :Input FIFO almost empty interrupt The event driving this status can only be changed by software pushing the input FIFO or hardware popping the input FIFO  */
#define SECP_ROT_KAM_KAM_PMR_SHA_INTR_IN_FIFO_AE_MASK 0x4
#define SECP_ROT_KAM_KAM_PMR_SHA_INTR_IN_FIFO_AE_INV_MASK 0xFFFFFFFB
#define SECP_ROT_KAM_KAM_PMR_SHA_INTR_IN_FIFO_AE_VALUE_MASK 0x2
#define SECP_ROT_KAM_KAM_PMR_SHA_INTR_IN_FIFO_AE_INV_VALUE_MASK 0xFFFFFFFD
#define SECP_ROT_KAM_KAM_PMR_SHA_INTR_IN_FIFO_AE_SIZE 1
#define SECP_ROT_KAM_KAM_PMR_SHA_INTR_IN_FIFO_AE_DEFAULT 1
#define SECP_ROT_KAM_KAM_PMR_SHA_INTR_IN_FIFO_AE 0x4  /* IN_FIFO_AE DESCRIPTION :Input FIFO almost empty interrupt The event driving this status can only be changed by software pushing the input FIFO or hardware popping the input FIFO */
#define SECP_ROT_KAM_KAM_PMR_SHA_INTR_ERR_OFFSET 1  /* ERR DESCRIPTION :Error interrupt Status indicating an error has been detected. This bit is a consolidation(OR)of all error events in SHA_ERR_STATUS. The event driving this status can only be changed by software resetting the block.  */
#define SECP_ROT_KAM_KAM_PMR_SHA_INTR_ERR_MASK 0x2
#define SECP_ROT_KAM_KAM_PMR_SHA_INTR_ERR_INV_MASK 0xFFFFFFFD
#define SECP_ROT_KAM_KAM_PMR_SHA_INTR_ERR_VALUE_MASK 0x1
#define SECP_ROT_KAM_KAM_PMR_SHA_INTR_ERR_INV_VALUE_MASK 0xFFFFFFFE
#define SECP_ROT_KAM_KAM_PMR_SHA_INTR_ERR_SIZE 1
#define SECP_ROT_KAM_KAM_PMR_SHA_INTR_ERR_DEFAULT 0
#define SECP_ROT_KAM_KAM_PMR_SHA_INTR_ERR 0x2  /* ERR DESCRIPTION :Error interrupt Status indicating an error has been detected. This bit is a consolidation(OR)of all error events in SHA_ERR_STATUS. The event driving this status can only be changed by software resetting the block. */
#define SECP_ROT_KAM_KAM_PMR_SHA_INTR_ALERT_OFFSET 0  /* ALERT DESCRIPTION :Alert interrupt An security relevant error has been detected. This bit is a consolidation (OR) of all alert events in SHA_ALERT_STATUS. The event driving this status can only be changed by software resetting the block.  */
#define SECP_ROT_KAM_KAM_PMR_SHA_INTR_ALERT_MASK 0x1
#define SECP_ROT_KAM_KAM_PMR_SHA_INTR_ALERT_INV_MASK 0xFFFFFFFE
#define SECP_ROT_KAM_KAM_PMR_SHA_INTR_ALERT_VALUE_MASK 0x0
#define SECP_ROT_KAM_KAM_PMR_SHA_INTR_ALERT_INV_VALUE_MASK 0xFFFFFFFF
#define SECP_ROT_KAM_KAM_PMR_SHA_INTR_ALERT_SIZE 1
#define SECP_ROT_KAM_KAM_PMR_SHA_INTR_ALERT_DEFAULT 0
#define SECP_ROT_KAM_KAM_PMR_SHA_INTR_ALERT 0x1  /* ALERT DESCRIPTION :Alert interrupt An security relevant error has been detected. This bit is a consolidation (OR) of all alert events in SHA_ALERT_STATUS. The event driving this status can only be changed by software resetting the block. */
#define SECP_ROT_KAM_KAM_ECC_CTRL_PMR_ERR_SB_INSERT_OFFSET 3  /* ERR_SB_INSERT DESCRIPTION :When set, PMR write followed by read will cause correctable error on bit0 the PMR location  */
#define SECP_ROT_KAM_KAM_ECC_CTRL_PMR_ERR_SB_INSERT_MASK 0x8
#define SECP_ROT_KAM_KAM_ECC_CTRL_PMR_ERR_SB_INSERT_INV_MASK 0xFFFFFFF7
#define SECP_ROT_KAM_KAM_ECC_CTRL_PMR_ERR_SB_INSERT_VALUE_MASK 0x4
#define SECP_ROT_KAM_KAM_ECC_CTRL_PMR_ERR_SB_INSERT_INV_VALUE_MASK 0xFFFFFFFB
#define SECP_ROT_KAM_KAM_ECC_CTRL_PMR_ERR_SB_INSERT_SIZE 1
#define SECP_ROT_KAM_KAM_ECC_CTRL_PMR_ERR_SB_INSERT_DEFAULT 0
#define SECP_ROT_KAM_KAM_ECC_CTRL_PMR_ERR_SB_INSERT 0x8  /* ERR_SB_INSERT DESCRIPTION :When set, PMR write followed by read will cause correctable error on bit0 the PMR location */
#define SECP_ROT_KAM_KAM_ECC_CTRL_PMR_ERR_DB_INSERT_OFFSET 2  /* ERR_DB_INSERT DESCRIPTION :When set, PMR write followed by read will cause uncorrectable error on corresponding PMR location.  */
#define SECP_ROT_KAM_KAM_ECC_CTRL_PMR_ERR_DB_INSERT_MASK 0x4
#define SECP_ROT_KAM_KAM_ECC_CTRL_PMR_ERR_DB_INSERT_INV_MASK 0xFFFFFFFB
#define SECP_ROT_KAM_KAM_ECC_CTRL_PMR_ERR_DB_INSERT_VALUE_MASK 0x2
#define SECP_ROT_KAM_KAM_ECC_CTRL_PMR_ERR_DB_INSERT_INV_VALUE_MASK 0xFFFFFFFD
#define SECP_ROT_KAM_KAM_ECC_CTRL_PMR_ERR_DB_INSERT_SIZE 1
#define SECP_ROT_KAM_KAM_ECC_CTRL_PMR_ERR_DB_INSERT_DEFAULT 0
#define SECP_ROT_KAM_KAM_ECC_CTRL_PMR_ERR_DB_INSERT 0x4  /* ERR_DB_INSERT DESCRIPTION :When set, PMR write followed by read will cause uncorrectable error on corresponding PMR location. */
#define SECP_ROT_KAM_KAM_ECC_CTRL_PMR_ERR_CLEAR_OFFSET 1  /* ERR_CLEAR DESCRIPTION :When set, will clear any pending ERR_DB or ERR_SB status  */
#define SECP_ROT_KAM_KAM_ECC_CTRL_PMR_ERR_CLEAR_MASK 0x2
#define SECP_ROT_KAM_KAM_ECC_CTRL_PMR_ERR_CLEAR_INV_MASK 0xFFFFFFFD
#define SECP_ROT_KAM_KAM_ECC_CTRL_PMR_ERR_CLEAR_VALUE_MASK 0x1
#define SECP_ROT_KAM_KAM_ECC_CTRL_PMR_ERR_CLEAR_INV_VALUE_MASK 0xFFFFFFFE
#define SECP_ROT_KAM_KAM_ECC_CTRL_PMR_ERR_CLEAR_SIZE 1
#define SECP_ROT_KAM_KAM_ECC_CTRL_PMR_ERR_CLEAR_DEFAULT 0
#define SECP_ROT_KAM_KAM_ECC_CTRL_PMR_ERR_CLEAR 0x2  /* ERR_CLEAR DESCRIPTION :When set, will clear any pending ERR_DB or ERR_SB status */
#define SECP_ROT_KAM_KAM_ECC_CTRL_PMR_ENABLE_OFFSET 0  /* ENABLE DESCRIPTION :1: enables ECC checking on the Instruction RAM memory. The PMR is protected with a 7-bit ECC per 32-bit word. Partial writes can never occur on PMR memory since PMR writes are only done by a hardware state machine.  */
#define SECP_ROT_KAM_KAM_ECC_CTRL_PMR_ENABLE_MASK 0x1
#define SECP_ROT_KAM_KAM_ECC_CTRL_PMR_ENABLE_INV_MASK 0xFFFFFFFE
#define SECP_ROT_KAM_KAM_ECC_CTRL_PMR_ENABLE_VALUE_MASK 0x0
#define SECP_ROT_KAM_KAM_ECC_CTRL_PMR_ENABLE_INV_VALUE_MASK 0xFFFFFFFF
#define SECP_ROT_KAM_KAM_ECC_CTRL_PMR_ENABLE_SIZE 1
#define SECP_ROT_KAM_KAM_ECC_CTRL_PMR_ENABLE_DEFAULT 0
#define SECP_ROT_KAM_KAM_ECC_CTRL_PMR_ENABLE 0x1  /* ENABLE DESCRIPTION :1: enables ECC checking on the Instruction RAM memory. The PMR is protected with a 7-bit ECC per 32-bit word. Partial writes can never occur on PMR memory since PMR writes are only done by a hardware state machine. */
#define SECP_ROT_KAM_KAM_ECC_STATUS_PMR_ERR_DB_OFFSET 31
#define SECP_ROT_KAM_KAM_ECC_STATUS_PMR_ERR_DB_MASK 0x80000000
#define SECP_ROT_KAM_KAM_ECC_STATUS_PMR_ERR_DB_INV_MASK 0x7FFFFFFF
#define SECP_ROT_KAM_KAM_ECC_STATUS_PMR_ERR_DB_VALUE_MASK 0x40000000
#define SECP_ROT_KAM_KAM_ECC_STATUS_PMR_ERR_DB_INV_VALUE_MASK 0xBFFFFFFF
#define SECP_ROT_KAM_KAM_ECC_STATUS_PMR_ERR_DB_SIZE 1
#define SECP_ROT_KAM_KAM_ECC_STATUS_PMR_ERR_DB_DEFAULT 0
#define SECP_ROT_KAM_KAM_ECC_STATUS_PMR_ERR_DB 0x80000000
#define SECP_ROT_KAM_KAM_ECC_STATUS_PMR_ERR_SB_OFFSET 30
#define SECP_ROT_KAM_KAM_ECC_STATUS_PMR_ERR_SB_MASK 0x40000000
#define SECP_ROT_KAM_KAM_ECC_STATUS_PMR_ERR_SB_INV_MASK 0xBFFFFFFF
#define SECP_ROT_KAM_KAM_ECC_STATUS_PMR_ERR_SB_VALUE_MASK 0x20000000
#define SECP_ROT_KAM_KAM_ECC_STATUS_PMR_ERR_SB_INV_VALUE_MASK 0xDFFFFFFF
#define SECP_ROT_KAM_KAM_ECC_STATUS_PMR_ERR_SB_SIZE 1
#define SECP_ROT_KAM_KAM_ECC_STATUS_PMR_ERR_SB_DEFAULT 0
#define SECP_ROT_KAM_KAM_ECC_STATUS_PMR_ERR_SB 0x40000000
#define SECP_ROT_KAM_KAM_ECC_STATUS_PMR_ERR_COUNT_OFFSET 24
#define SECP_ROT_KAM_KAM_ECC_STATUS_PMR_ERR_COUNT_MASK 0xF000000
#define SECP_ROT_KAM_KAM_ECC_STATUS_PMR_ERR_COUNT_INV_MASK 0xF0FFFFFF
#define SECP_ROT_KAM_KAM_ECC_STATUS_PMR_ERR_COUNT_VALUE_MASK 0x7800000
#define SECP_ROT_KAM_KAM_ECC_STATUS_PMR_ERR_COUNT_INV_VALUE_MASK 0xF87FFFFF
#define SECP_ROT_KAM_KAM_ECC_STATUS_PMR_ERR_COUNT_SIZE 4
#define SECP_ROT_KAM_KAM_ECC_STATUS_PMR_ERR_COUNT_DEFAULT 0
#define SECP_ROT_KAM_KAM_ECC_STATUS_PMR_ECC_OFFSET 16
#define SECP_ROT_KAM_KAM_ECC_STATUS_PMR_ECC_MASK 0x7F0000
#define SECP_ROT_KAM_KAM_ECC_STATUS_PMR_ECC_INV_MASK 0xFF80FFFF
#define SECP_ROT_KAM_KAM_ECC_STATUS_PMR_ECC_VALUE_MASK 0x3F8000
#define SECP_ROT_KAM_KAM_ECC_STATUS_PMR_ECC_INV_VALUE_MASK 0xFFC07FFF
#define SECP_ROT_KAM_KAM_ECC_STATUS_PMR_ECC_SIZE 7
#define SECP_ROT_KAM_KAM_ECC_STATUS_PMR_ECC_DEFAULT 0
#define SECP_ROT_KAM_KAM_ECC_STATUS_PMR_ADDR_OFFSET 0
#define SECP_ROT_KAM_KAM_ECC_STATUS_PMR_ADDR_MASK 0x7FFF
#define SECP_ROT_KAM_KAM_ECC_STATUS_PMR_ADDR_INV_MASK 0xFFFF8000
#define SECP_ROT_KAM_KAM_ECC_STATUS_PMR_ADDR_VALUE_MASK 0x3FFF
#define SECP_ROT_KAM_KAM_ECC_STATUS_PMR_ADDR_INV_VALUE_MASK 0xFFFFC000
#define SECP_ROT_KAM_KAM_ECC_STATUS_PMR_ADDR_SIZE 15
#define SECP_ROT_KAM_KAM_ECC_STATUS_PMR_ADDR_DEFAULT 0
#define SECP_ROT_KAM_KAM_ECC_LOG_PMR_DATA_OFFSET 0
#define SECP_ROT_KAM_KAM_ECC_LOG_PMR_DATA_MASK 0xFFFFFFFF
#define SECP_ROT_KAM_KAM_ECC_LOG_PMR_DATA_INV_MASK 0x0
#define SECP_ROT_KAM_KAM_ECC_LOG_PMR_DATA_VALUE_MASK 0x7FFFFFFF
#define SECP_ROT_KAM_KAM_ECC_LOG_PMR_DATA_INV_VALUE_MASK 0x80000000
#define SECP_ROT_KAM_KAM_ECC_LOG_PMR_DATA_SIZE 32
#define SECP_ROT_KAM_KAM_ECC_LOG_PMR_DATA_DEFAULT 0
#define SECP_ROT_KAM_KAM_ERR_STATUS_ECC_DB_PMR_OFFSET 3
#define SECP_ROT_KAM_KAM_ERR_STATUS_ECC_DB_PMR_MASK 0x8
#define SECP_ROT_KAM_KAM_ERR_STATUS_ECC_DB_PMR_INV_MASK 0xFFFFFFF7
#define SECP_ROT_KAM_KAM_ERR_STATUS_ECC_DB_PMR_VALUE_MASK 0x4
#define SECP_ROT_KAM_KAM_ERR_STATUS_ECC_DB_PMR_INV_VALUE_MASK 0xFFFFFFFB
#define SECP_ROT_KAM_KAM_ERR_STATUS_ECC_DB_PMR_SIZE 1
#define SECP_ROT_KAM_KAM_ERR_STATUS_ECC_DB_PMR_DEFAULT 0
#define SECP_ROT_KAM_KAM_ERR_STATUS_ECC_DB_PMR 0x8
#define SECP_ROT_KAM_KAM_ERR_STATUS_ECC_SB_PMR_OFFSET 2
#define SECP_ROT_KAM_KAM_ERR_STATUS_ECC_SB_PMR_MASK 0x4
#define SECP_ROT_KAM_KAM_ERR_STATUS_ECC_SB_PMR_INV_MASK 0xFFFFFFFB
#define SECP_ROT_KAM_KAM_ERR_STATUS_ECC_SB_PMR_VALUE_MASK 0x2
#define SECP_ROT_KAM_KAM_ERR_STATUS_ECC_SB_PMR_INV_VALUE_MASK 0xFFFFFFFD
#define SECP_ROT_KAM_KAM_ERR_STATUS_ECC_SB_PMR_SIZE 1
#define SECP_ROT_KAM_KAM_ERR_STATUS_ECC_SB_PMR_DEFAULT 0
#define SECP_ROT_KAM_KAM_ERR_STATUS_ECC_SB_PMR 0x4
#define SECP_ROT_KAM_KAM_ERR_STATUS_PMR_EXTEND_ABORT_OFFSET 1
#define SECP_ROT_KAM_KAM_ERR_STATUS_PMR_EXTEND_ABORT_MASK 0x2
#define SECP_ROT_KAM_KAM_ERR_STATUS_PMR_EXTEND_ABORT_INV_MASK 0xFFFFFFFD
#define SECP_ROT_KAM_KAM_ERR_STATUS_PMR_EXTEND_ABORT_VALUE_MASK 0x1
#define SECP_ROT_KAM_KAM_ERR_STATUS_PMR_EXTEND_ABORT_INV_VALUE_MASK 0xFFFFFFFE
#define SECP_ROT_KAM_KAM_ERR_STATUS_PMR_EXTEND_ABORT_SIZE 1
#define SECP_ROT_KAM_KAM_ERR_STATUS_PMR_EXTEND_ABORT_DEFAULT 0
#define SECP_ROT_KAM_KAM_ERR_STATUS_PMR_EXTEND_ABORT 0x2
#define SECP_ROT_KAM_KAM_ERR_STATUS_SHA_UNAUTHORIZED_OFFSET 0
#define SECP_ROT_KAM_KAM_ERR_STATUS_SHA_UNAUTHORIZED_MASK 0x1
#define SECP_ROT_KAM_KAM_ERR_STATUS_SHA_UNAUTHORIZED_INV_MASK 0xFFFFFFFE
#define SECP_ROT_KAM_KAM_ERR_STATUS_SHA_UNAUTHORIZED_VALUE_MASK 0x0
#define SECP_ROT_KAM_KAM_ERR_STATUS_SHA_UNAUTHORIZED_INV_VALUE_MASK 0xFFFFFFFF
#define SECP_ROT_KAM_KAM_ERR_STATUS_SHA_UNAUTHORIZED_SIZE 1
#define SECP_ROT_KAM_KAM_ERR_STATUS_SHA_UNAUTHORIZED_DEFAULT 0
#define SECP_ROT_KAM_KAM_ERR_STATUS_SHA_UNAUTHORIZED 0x1
#define SECP_ROT_KAM_KAM_INTR_STATE_OTPC_INT_OFFSET 7
#define SECP_ROT_KAM_KAM_INTR_STATE_OTPC_INT_MASK 0x80
#define SECP_ROT_KAM_KAM_INTR_STATE_OTPC_INT_INV_MASK 0xFFFFFF7F
#define SECP_ROT_KAM_KAM_INTR_STATE_OTPC_INT_VALUE_MASK 0x40
#define SECP_ROT_KAM_KAM_INTR_STATE_OTPC_INT_INV_VALUE_MASK 0xFFFFFFBF
#define SECP_ROT_KAM_KAM_INTR_STATE_OTPC_INT_SIZE 1
#define SECP_ROT_KAM_KAM_INTR_STATE_OTPC_INT_DEFAULT 0
#define SECP_ROT_KAM_KAM_INTR_STATE_OTPC_INT 0x80
#define SECP_ROT_KAM_KAM_INTR_STATE_OTP_WRITE_DENY_OFFSET 6
#define SECP_ROT_KAM_KAM_INTR_STATE_OTP_WRITE_DENY_MASK 0x40
#define SECP_ROT_KAM_KAM_INTR_STATE_OTP_WRITE_DENY_INV_MASK 0xFFFFFFBF
#define SECP_ROT_KAM_KAM_INTR_STATE_OTP_WRITE_DENY_VALUE_MASK 0x20
#define SECP_ROT_KAM_KAM_INTR_STATE_OTP_WRITE_DENY_INV_VALUE_MASK 0xFFFFFFDF
#define SECP_ROT_KAM_KAM_INTR_STATE_OTP_WRITE_DENY_SIZE 1
#define SECP_ROT_KAM_KAM_INTR_STATE_OTP_WRITE_DENY_DEFAULT 0
#define SECP_ROT_KAM_KAM_INTR_STATE_OTP_WRITE_DENY 0x40
#define SECP_ROT_KAM_KAM_INTR_STATE_OTP_READ_DENY_OFFSET 5
#define SECP_ROT_KAM_KAM_INTR_STATE_OTP_READ_DENY_MASK 0x20
#define SECP_ROT_KAM_KAM_INTR_STATE_OTP_READ_DENY_INV_MASK 0xFFFFFFDF
#define SECP_ROT_KAM_KAM_INTR_STATE_OTP_READ_DENY_VALUE_MASK 0x10
#define SECP_ROT_KAM_KAM_INTR_STATE_OTP_READ_DENY_INV_VALUE_MASK 0xFFFFFFEF
#define SECP_ROT_KAM_KAM_INTR_STATE_OTP_READ_DENY_SIZE 1
#define SECP_ROT_KAM_KAM_INTR_STATE_OTP_READ_DENY_DEFAULT 0
#define SECP_ROT_KAM_KAM_INTR_STATE_OTP_READ_DENY 0x20
#define SECP_ROT_KAM_KAM_INTR_STATE_KV_WRITE_DENY_OFFSET 4
#define SECP_ROT_KAM_KAM_INTR_STATE_KV_WRITE_DENY_MASK 0x10
#define SECP_ROT_KAM_KAM_INTR_STATE_KV_WRITE_DENY_INV_MASK 0xFFFFFFEF
#define SECP_ROT_KAM_KAM_INTR_STATE_KV_WRITE_DENY_VALUE_MASK 0x8
#define SECP_ROT_KAM_KAM_INTR_STATE_KV_WRITE_DENY_INV_VALUE_MASK 0xFFFFFFF7
#define SECP_ROT_KAM_KAM_INTR_STATE_KV_WRITE_DENY_SIZE 1
#define SECP_ROT_KAM_KAM_INTR_STATE_KV_WRITE_DENY_DEFAULT 0
#define SECP_ROT_KAM_KAM_INTR_STATE_KV_WRITE_DENY 0x10
#define SECP_ROT_KAM_KAM_INTR_STATE_KV_READ_DENY_OFFSET 3
#define SECP_ROT_KAM_KAM_INTR_STATE_KV_READ_DENY_MASK 0x8
#define SECP_ROT_KAM_KAM_INTR_STATE_KV_READ_DENY_INV_MASK 0xFFFFFFF7
#define SECP_ROT_KAM_KAM_INTR_STATE_KV_READ_DENY_VALUE_MASK 0x4
#define SECP_ROT_KAM_KAM_INTR_STATE_KV_READ_DENY_INV_VALUE_MASK 0xFFFFFFFB
#define SECP_ROT_KAM_KAM_INTR_STATE_KV_READ_DENY_SIZE 1
#define SECP_ROT_KAM_KAM_INTR_STATE_KV_READ_DENY_DEFAULT 0
#define SECP_ROT_KAM_KAM_INTR_STATE_KV_READ_DENY 0x8
#define SECP_ROT_KAM_KAM_INTR_STATE_PMR_EXTEND_COMPLETE_OFFSET 2
#define SECP_ROT_KAM_KAM_INTR_STATE_PMR_EXTEND_COMPLETE_MASK 0x4
#define SECP_ROT_KAM_KAM_INTR_STATE_PMR_EXTEND_COMPLETE_INV_MASK 0xFFFFFFFB
#define SECP_ROT_KAM_KAM_INTR_STATE_PMR_EXTEND_COMPLETE_VALUE_MASK 0x2
#define SECP_ROT_KAM_KAM_INTR_STATE_PMR_EXTEND_COMPLETE_INV_VALUE_MASK 0xFFFFFFFD
#define SECP_ROT_KAM_KAM_INTR_STATE_PMR_EXTEND_COMPLETE_SIZE 1
#define SECP_ROT_KAM_KAM_INTR_STATE_PMR_EXTEND_COMPLETE_DEFAULT 0
#define SECP_ROT_KAM_KAM_INTR_STATE_PMR_EXTEND_COMPLETE 0x4
#define SECP_ROT_KAM_KAM_INTR_STATE_ERR_OFFSET 1
#define SECP_ROT_KAM_KAM_INTR_STATE_ERR_MASK 0x2
#define SECP_ROT_KAM_KAM_INTR_STATE_ERR_INV_MASK 0xFFFFFFFD
#define SECP_ROT_KAM_KAM_INTR_STATE_ERR_VALUE_MASK 0x1
#define SECP_ROT_KAM_KAM_INTR_STATE_ERR_INV_VALUE_MASK 0xFFFFFFFE
#define SECP_ROT_KAM_KAM_INTR_STATE_ERR_SIZE 1
#define SECP_ROT_KAM_KAM_INTR_STATE_ERR_DEFAULT 0
#define SECP_ROT_KAM_KAM_INTR_STATE_ERR 0x2
#define SECP_ROT_KAM_KAM_INTR_STATE_ALERT_OFFSET 0
#define SECP_ROT_KAM_KAM_INTR_STATE_ALERT_MASK 0x1
#define SECP_ROT_KAM_KAM_INTR_STATE_ALERT_INV_MASK 0xFFFFFFFE
#define SECP_ROT_KAM_KAM_INTR_STATE_ALERT_VALUE_MASK 0x0
#define SECP_ROT_KAM_KAM_INTR_STATE_ALERT_INV_VALUE_MASK 0xFFFFFFFF
#define SECP_ROT_KAM_KAM_INTR_STATE_ALERT_SIZE 1
#define SECP_ROT_KAM_KAM_INTR_STATE_ALERT_DEFAULT 0
#define SECP_ROT_KAM_KAM_INTR_STATE_ALERT 0x1
#define SECP_ROT_KAM_KAM_INTR_ENABLE_OTPC_INT_OFFSET 7
#define SECP_ROT_KAM_KAM_INTR_ENABLE_OTPC_INT_MASK 0x80
#define SECP_ROT_KAM_KAM_INTR_ENABLE_OTPC_INT_INV_MASK 0xFFFFFF7F
#define SECP_ROT_KAM_KAM_INTR_ENABLE_OTPC_INT_VALUE_MASK 0x40
#define SECP_ROT_KAM_KAM_INTR_ENABLE_OTPC_INT_INV_VALUE_MASK 0xFFFFFFBF
#define SECP_ROT_KAM_KAM_INTR_ENABLE_OTPC_INT_SIZE 1
#define SECP_ROT_KAM_KAM_INTR_ENABLE_OTPC_INT_DEFAULT 0
#define SECP_ROT_KAM_KAM_INTR_ENABLE_OTPC_INT 0x80
#define SECP_ROT_KAM_KAM_INTR_ENABLE_OTP_WRITE_DENY_OFFSET 6
#define SECP_ROT_KAM_KAM_INTR_ENABLE_OTP_WRITE_DENY_MASK 0x40
#define SECP_ROT_KAM_KAM_INTR_ENABLE_OTP_WRITE_DENY_INV_MASK 0xFFFFFFBF
#define SECP_ROT_KAM_KAM_INTR_ENABLE_OTP_WRITE_DENY_VALUE_MASK 0x20
#define SECP_ROT_KAM_KAM_INTR_ENABLE_OTP_WRITE_DENY_INV_VALUE_MASK 0xFFFFFFDF
#define SECP_ROT_KAM_KAM_INTR_ENABLE_OTP_WRITE_DENY_SIZE 1
#define SECP_ROT_KAM_KAM_INTR_ENABLE_OTP_WRITE_DENY_DEFAULT 0
#define SECP_ROT_KAM_KAM_INTR_ENABLE_OTP_WRITE_DENY 0x40
#define SECP_ROT_KAM_KAM_INTR_ENABLE_OTP_READ_DENY_OFFSET 5
#define SECP_ROT_KAM_KAM_INTR_ENABLE_OTP_READ_DENY_MASK 0x20
#define SECP_ROT_KAM_KAM_INTR_ENABLE_OTP_READ_DENY_INV_MASK 0xFFFFFFDF
#define SECP_ROT_KAM_KAM_INTR_ENABLE_OTP_READ_DENY_VALUE_MASK 0x10
#define SECP_ROT_KAM_KAM_INTR_ENABLE_OTP_READ_DENY_INV_VALUE_MASK 0xFFFFFFEF
#define SECP_ROT_KAM_KAM_INTR_ENABLE_OTP_READ_DENY_SIZE 1
#define SECP_ROT_KAM_KAM_INTR_ENABLE_OTP_READ_DENY_DEFAULT 0
#define SECP_ROT_KAM_KAM_INTR_ENABLE_OTP_READ_DENY 0x20
#define SECP_ROT_KAM_KAM_INTR_ENABLE_KV_WRITE_DENY_OFFSET 4
#define SECP_ROT_KAM_KAM_INTR_ENABLE_KV_WRITE_DENY_MASK 0x10
#define SECP_ROT_KAM_KAM_INTR_ENABLE_KV_WRITE_DENY_INV_MASK 0xFFFFFFEF
#define SECP_ROT_KAM_KAM_INTR_ENABLE_KV_WRITE_DENY_VALUE_MASK 0x8
#define SECP_ROT_KAM_KAM_INTR_ENABLE_KV_WRITE_DENY_INV_VALUE_MASK 0xFFFFFFF7
#define SECP_ROT_KAM_KAM_INTR_ENABLE_KV_WRITE_DENY_SIZE 1
#define SECP_ROT_KAM_KAM_INTR_ENABLE_KV_WRITE_DENY_DEFAULT 0
#define SECP_ROT_KAM_KAM_INTR_ENABLE_KV_WRITE_DENY 0x10
#define SECP_ROT_KAM_KAM_INTR_ENABLE_KV_READ_DENY_OFFSET 3
#define SECP_ROT_KAM_KAM_INTR_ENABLE_KV_READ_DENY_MASK 0x8
#define SECP_ROT_KAM_KAM_INTR_ENABLE_KV_READ_DENY_INV_MASK 0xFFFFFFF7
#define SECP_ROT_KAM_KAM_INTR_ENABLE_KV_READ_DENY_VALUE_MASK 0x4
#define SECP_ROT_KAM_KAM_INTR_ENABLE_KV_READ_DENY_INV_VALUE_MASK 0xFFFFFFFB
#define SECP_ROT_KAM_KAM_INTR_ENABLE_KV_READ_DENY_SIZE 1
#define SECP_ROT_KAM_KAM_INTR_ENABLE_KV_READ_DENY_DEFAULT 0
#define SECP_ROT_KAM_KAM_INTR_ENABLE_KV_READ_DENY 0x8
#define SECP_ROT_KAM_KAM_INTR_ENABLE_PMR_EXTEND_COMPLETE_OFFSET 2
#define SECP_ROT_KAM_KAM_INTR_ENABLE_PMR_EXTEND_COMPLETE_MASK 0x4
#define SECP_ROT_KAM_KAM_INTR_ENABLE_PMR_EXTEND_COMPLETE_INV_MASK 0xFFFFFFFB
#define SECP_ROT_KAM_KAM_INTR_ENABLE_PMR_EXTEND_COMPLETE_VALUE_MASK 0x2
#define SECP_ROT_KAM_KAM_INTR_ENABLE_PMR_EXTEND_COMPLETE_INV_VALUE_MASK 0xFFFFFFFD
#define SECP_ROT_KAM_KAM_INTR_ENABLE_PMR_EXTEND_COMPLETE_SIZE 1
#define SECP_ROT_KAM_KAM_INTR_ENABLE_PMR_EXTEND_COMPLETE_DEFAULT 0
#define SECP_ROT_KAM_KAM_INTR_ENABLE_PMR_EXTEND_COMPLETE 0x4
#define SECP_ROT_KAM_KAM_INTR_ENABLE_ERR_OFFSET 1
#define SECP_ROT_KAM_KAM_INTR_ENABLE_ERR_MASK 0x2
#define SECP_ROT_KAM_KAM_INTR_ENABLE_ERR_INV_MASK 0xFFFFFFFD
#define SECP_ROT_KAM_KAM_INTR_ENABLE_ERR_VALUE_MASK 0x1
#define SECP_ROT_KAM_KAM_INTR_ENABLE_ERR_INV_VALUE_MASK 0xFFFFFFFE
#define SECP_ROT_KAM_KAM_INTR_ENABLE_ERR_SIZE 1
#define SECP_ROT_KAM_KAM_INTR_ENABLE_ERR_DEFAULT 1
#define SECP_ROT_KAM_KAM_INTR_ENABLE_ERR 0x2
#define SECP_ROT_KAM_KAM_INTR_ENABLE_ALERT_OFFSET 0
#define SECP_ROT_KAM_KAM_INTR_ENABLE_ALERT_MASK 0x1
#define SECP_ROT_KAM_KAM_INTR_ENABLE_ALERT_INV_MASK 0xFFFFFFFE
#define SECP_ROT_KAM_KAM_INTR_ENABLE_ALERT_VALUE_MASK 0x0
#define SECP_ROT_KAM_KAM_INTR_ENABLE_ALERT_INV_VALUE_MASK 0xFFFFFFFF
#define SECP_ROT_KAM_KAM_INTR_ENABLE_ALERT_SIZE 1
#define SECP_ROT_KAM_KAM_INTR_ENABLE_ALERT_DEFAULT 1
#define SECP_ROT_KAM_KAM_INTR_ENABLE_ALERT 0x1
#define SECP_ROT_KAM_KAM_INTR_TEST_OTPC_INT_OFFSET 7
#define SECP_ROT_KAM_KAM_INTR_TEST_OTPC_INT_MASK 0x80
#define SECP_ROT_KAM_KAM_INTR_TEST_OTPC_INT_INV_MASK 0xFFFFFF7F
#define SECP_ROT_KAM_KAM_INTR_TEST_OTPC_INT_VALUE_MASK 0x40
#define SECP_ROT_KAM_KAM_INTR_TEST_OTPC_INT_INV_VALUE_MASK 0xFFFFFFBF
#define SECP_ROT_KAM_KAM_INTR_TEST_OTPC_INT_SIZE 1
#define SECP_ROT_KAM_KAM_INTR_TEST_OTPC_INT_DEFAULT 0
#define SECP_ROT_KAM_KAM_INTR_TEST_OTPC_INT 0x80
#define SECP_ROT_KAM_KAM_INTR_TEST_OTP_WRITE_DENY_OFFSET 6
#define SECP_ROT_KAM_KAM_INTR_TEST_OTP_WRITE_DENY_MASK 0x40
#define SECP_ROT_KAM_KAM_INTR_TEST_OTP_WRITE_DENY_INV_MASK 0xFFFFFFBF
#define SECP_ROT_KAM_KAM_INTR_TEST_OTP_WRITE_DENY_VALUE_MASK 0x20
#define SECP_ROT_KAM_KAM_INTR_TEST_OTP_WRITE_DENY_INV_VALUE_MASK 0xFFFFFFDF
#define SECP_ROT_KAM_KAM_INTR_TEST_OTP_WRITE_DENY_SIZE 1
#define SECP_ROT_KAM_KAM_INTR_TEST_OTP_WRITE_DENY_DEFAULT 0
#define SECP_ROT_KAM_KAM_INTR_TEST_OTP_WRITE_DENY 0x40
#define SECP_ROT_KAM_KAM_INTR_TEST_OTP_READ_DENY_OFFSET 5
#define SECP_ROT_KAM_KAM_INTR_TEST_OTP_READ_DENY_MASK 0x20
#define SECP_ROT_KAM_KAM_INTR_TEST_OTP_READ_DENY_INV_MASK 0xFFFFFFDF
#define SECP_ROT_KAM_KAM_INTR_TEST_OTP_READ_DENY_VALUE_MASK 0x10
#define SECP_ROT_KAM_KAM_INTR_TEST_OTP_READ_DENY_INV_VALUE_MASK 0xFFFFFFEF
#define SECP_ROT_KAM_KAM_INTR_TEST_OTP_READ_DENY_SIZE 1
#define SECP_ROT_KAM_KAM_INTR_TEST_OTP_READ_DENY_DEFAULT 0
#define SECP_ROT_KAM_KAM_INTR_TEST_OTP_READ_DENY 0x20
#define SECP_ROT_KAM_KAM_INTR_TEST_KV_WRITE_DENY_OFFSET 4
#define SECP_ROT_KAM_KAM_INTR_TEST_KV_WRITE_DENY_MASK 0x10
#define SECP_ROT_KAM_KAM_INTR_TEST_KV_WRITE_DENY_INV_MASK 0xFFFFFFEF
#define SECP_ROT_KAM_KAM_INTR_TEST_KV_WRITE_DENY_VALUE_MASK 0x8
#define SECP_ROT_KAM_KAM_INTR_TEST_KV_WRITE_DENY_INV_VALUE_MASK 0xFFFFFFF7
#define SECP_ROT_KAM_KAM_INTR_TEST_KV_WRITE_DENY_SIZE 1
#define SECP_ROT_KAM_KAM_INTR_TEST_KV_WRITE_DENY_DEFAULT 0
#define SECP_ROT_KAM_KAM_INTR_TEST_KV_WRITE_DENY 0x10
#define SECP_ROT_KAM_KAM_INTR_TEST_KV_READ_DENY_OFFSET 3
#define SECP_ROT_KAM_KAM_INTR_TEST_KV_READ_DENY_MASK 0x8
#define SECP_ROT_KAM_KAM_INTR_TEST_KV_READ_DENY_INV_MASK 0xFFFFFFF7
#define SECP_ROT_KAM_KAM_INTR_TEST_KV_READ_DENY_VALUE_MASK 0x4
#define SECP_ROT_KAM_KAM_INTR_TEST_KV_READ_DENY_INV_VALUE_MASK 0xFFFFFFFB
#define SECP_ROT_KAM_KAM_INTR_TEST_KV_READ_DENY_SIZE 1
#define SECP_ROT_KAM_KAM_INTR_TEST_KV_READ_DENY_DEFAULT 0
#define SECP_ROT_KAM_KAM_INTR_TEST_KV_READ_DENY 0x8
#define SECP_ROT_KAM_KAM_INTR_TEST_PMR_EXTEND_COMPLETE_OFFSET 2
#define SECP_ROT_KAM_KAM_INTR_TEST_PMR_EXTEND_COMPLETE_MASK 0x4
#define SECP_ROT_KAM_KAM_INTR_TEST_PMR_EXTEND_COMPLETE_INV_MASK 0xFFFFFFFB
#define SECP_ROT_KAM_KAM_INTR_TEST_PMR_EXTEND_COMPLETE_VALUE_MASK 0x2
#define SECP_ROT_KAM_KAM_INTR_TEST_PMR_EXTEND_COMPLETE_INV_VALUE_MASK 0xFFFFFFFD
#define SECP_ROT_KAM_KAM_INTR_TEST_PMR_EXTEND_COMPLETE_SIZE 1
#define SECP_ROT_KAM_KAM_INTR_TEST_PMR_EXTEND_COMPLETE_DEFAULT 0
#define SECP_ROT_KAM_KAM_INTR_TEST_PMR_EXTEND_COMPLETE 0x4
#define SECP_ROT_KAM_KAM_INTR_TEST_ERR_OFFSET 1
#define SECP_ROT_KAM_KAM_INTR_TEST_ERR_MASK 0x2
#define SECP_ROT_KAM_KAM_INTR_TEST_ERR_INV_MASK 0xFFFFFFFD
#define SECP_ROT_KAM_KAM_INTR_TEST_ERR_VALUE_MASK 0x1
#define SECP_ROT_KAM_KAM_INTR_TEST_ERR_INV_VALUE_MASK 0xFFFFFFFE
#define SECP_ROT_KAM_KAM_INTR_TEST_ERR_SIZE 1
#define SECP_ROT_KAM_KAM_INTR_TEST_ERR_DEFAULT 0
#define SECP_ROT_KAM_KAM_INTR_TEST_ERR 0x2
#define SECP_ROT_KAM_KAM_INTR_TEST_ALERT_OFFSET 0
#define SECP_ROT_KAM_KAM_INTR_TEST_ALERT_MASK 0x1
#define SECP_ROT_KAM_KAM_INTR_TEST_ALERT_INV_MASK 0xFFFFFFFE
#define SECP_ROT_KAM_KAM_INTR_TEST_ALERT_VALUE_MASK 0x0
#define SECP_ROT_KAM_KAM_INTR_TEST_ALERT_INV_VALUE_MASK 0xFFFFFFFF
#define SECP_ROT_KAM_KAM_INTR_TEST_ALERT_SIZE 1
#define SECP_ROT_KAM_KAM_INTR_TEST_ALERT_DEFAULT 0
#define SECP_ROT_KAM_KAM_INTR_TEST_ALERT 0x1
#define SECP_ROT_KAM_KAM_SCRATCH_DATA_OFFSET 0
#define SECP_ROT_KAM_KAM_SCRATCH_DATA_MASK 0xFFFFFFFF
#define SECP_ROT_KAM_KAM_SCRATCH_DATA_INV_MASK 0x0
#define SECP_ROT_KAM_KAM_SCRATCH_DATA_VALUE_MASK 0x7FFFFFFF
#define SECP_ROT_KAM_KAM_SCRATCH_DATA_INV_VALUE_MASK 0x80000000
#define SECP_ROT_KAM_KAM_SCRATCH_DATA_SIZE 32
#define SECP_ROT_KAM_KAM_SCRATCH_DATA_DEFAULT 0
#endif /* _SECP_REGS_H_ */

/* end */


